Notes-App.apk,"android.permission.WRITE_EXTERNAL_STORAGE",thedorkknightrises.notes.ui.activities.SettingsActivity,true,<thedorkknightrises.notes.ui.activities.SettingsActivity: void localRestore(android.view.View)>,true,<thedorkknightrises.notes.ui.activities.SettingsActivity: void localRestore(android.view.View)>,false,null,trueNotiSender.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.noti.sender.-$$Lambda$MainActivity,false,null,true,<com.noti.sender.MainActivity: void onCreate(android.os.Bundle)>,false,null,false
NotiSender.apk,"android.permission.READ_EXTERNAL_STORAGE",com.noti.sender.-$$Lambda$MainActivity,false,null,true,<com.noti.sender.MainActivity: void onCreate(android.os.Bundle)>,false,null,false
NotiSender.apk,"android.permission.READ_EXTERNAL_STORAGE",com.noti.sender.MainActivity,true,<com.noti.sender.MainActivity: boolean isPermission(android.content.Context)>,true,<com.noti.sender.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
NotiSender.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.noti.sender.MainActivity,true,<com.noti.sender.MainActivity: boolean isPermission(android.content.Context)>,true,<com.noti.sender.MainActivity: void onCreate(android.os.Bundle)>,false,null,trueodyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.BulkDownloadService,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.activities.GenericActivity,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.MyMusicFragment,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.MyMusicFragment,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.network.artprovider.LastFMProvider,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.models.AlbumModel,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.activities.OdysseyMainActivity,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void lambda$requestPermissionExternalStorage$0$OdysseyMainActivity(android.view.View)>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.ThemeUtils,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.BookmarksFragment,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.SettingsFragment,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.activities.-$$Lambda$OdysseyMainActivity,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.FilesFragment,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.BookmarksFragment,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.FileExplorerHelper,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.network.artprovider.MusicBrainzProvider,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.models.ArtistModel,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.network.InsertImageTask,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.-$$Lambda$ArtworkManager,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.ThemeUtils,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.FileExplorerHelper,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.models.FileModel,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,org.gateshipone.odyssey.models.FileModel)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.network.ArtworkRequestModel,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.SavedPlaylistsFragment,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.NetworkUtils,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.ArtworkManager,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.SettingsFragment,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.FilesFragment,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.views.NowPlayingView$NowPlayingDragStatusReceiver,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.MediaStoreProjections,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.mediascanner.MediaScannerService,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,org.gateshipone.odyssey.models.FileModel)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.CoverBitmapLoader,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.fragments.SavedPlaylistsFragment,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,true
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.activities.-$$Lambda$OdysseyMainActivity,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.activities.GenericActivity,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.activities.OdysseyMainActivity,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void lambda$requestPermissionExternalStorage$0$OdysseyMainActivity(android.view.View)>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
odyssey.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.gateshipone.odyssey.views.NowPlayingView$NowPlayingDragStatusReceiver,false,null,true,<org.gateshipone.odyssey.activities.OdysseyMainActivity: void requestPermissionExternalStorage()>,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.network.ImageResponse,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.MusicLibraryHelper,true,<org.gateshipone.odyssey.utils.PermissionHelper: java.util.List getFilesForDirectory(android.content.Context,java.lang.String,java.io.FilenameFilter)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.artwork.storage.ArtworkDatabaseManager,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,false
odyssey.apk,"android.permission.READ_EXTERNAL_STORAGE",org.gateshipone.odyssey.utils.PermissionHelper,true,<org.gateshipone.odyssey.utils.PermissionHelper: android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>,false,null,false,null,falseogn-viewer-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.meisterschueler.ognviewer.activity.ManageIDsActivity,true,<com.meisterschueler.ognviewer.ui.ManageIDsFragment: boolean checkStoragePermissions(int)>,true,<com.meisterschueler.ognviewer.ui.ManageIDsFragment: boolean checkStoragePermissions(int)>,false,null,true
ogn-viewer-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.meisterschueler.ognviewer.ui.ManageIDsFragment,true,<com.meisterschueler.ognviewer.ui.ManageIDsFragment: boolean checkStoragePermissions(int)>,true,<com.meisterschueler.ognviewer.ui.ManageIDsFragment: boolean checkStoragePermissions(int)>,false,null,true
ogn-viewer-android.apk,"android.permission.ACCESS_COARSE_LOCATION",com.meisterschueler.ognviewer.activity.base.BaseActivity,true,<com.meisterschueler.ognviewer.activity.MapsActivity: void createFilterFromCurrentLocation()>,true,<com.meisterschueler.ognviewer.activity.MapsActivity: void createFilterFromCurrentLocation()>,false,null,true
ogn-viewer-android.apk,"android.permission.ACCESS_COARSE_LOCATION",com.meisterschueler.ognviewer.activity.MapsActivity,true,<com.meisterschueler.ognviewer.activity.MapsActivity: void zoomToCurrentLocation()>,true,<com.meisterschueler.ognviewer.activity.MapsActivity: void zoomToCurrentLocation()>,false,null,trueopacclient.apk,"android.permission.ACCESS_COARSE_LOCATION",de.geeksfactory.opacclient.frontend.LibraryListActivity,true,<de.geeksfactory.opacclient.frontend.LibraryListActivity: void showListGeo()>,true,<de.geeksfactory.opacclient.frontend.LibraryListActivity: void showListGeo()>,false,null,trueopenwallet-android.apk,"android.permission.CAMERA",com.openwallet.wallet.ui.ScanActivity,true,<com.openwallet.wallet.ui.ScanActivity: boolean hasCameraPermission()>,true,<com.openwallet.wallet.ui.ScanActivity: void askCameraPermission()>,false,null,trueosmeditor4android.apk,"android.permission.ACCESS_FINE_LOCATION",de.blau.android.Main,false,null,false,null,true,<f.g.d.a: boolean a(android.app.Activity,java.lang.String)>,false
osmeditor4android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",de.blau.android.Main,false,null,false,null,true,<f.g.d.a: boolean a(android.app.Activity,java.lang.String)>,falseosmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.StillImageOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.view.VoiceRecDialog,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.activity.TrackDetailEditor,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.view.TextNoteDialog,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.TextNoteOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.TagButtonOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.activity.OpenStreetMapUpload,true,<net.osmtracker.gpx.ExportTrackTask: void exportTrackAsGpx(long)>,false,null,false,null,false
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.activity.TrackLogger,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.SensorListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.gpx.ExportTrackTask,true,<net.osmtracker.gpx.ExportTrackTask: void exportTrackAsGpx(long)>,false,null,false,null,false
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.TagButtonOnClickListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.PageButtonOnClickListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.SensorListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.PressureListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.view.VoiceRecDialog,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.activity.ButtonsPresets,true,<net.osmtracker.activity.ButtonsPresets: void onResume()>,true,<net.osmtracker.activity.ButtonsPresets: void onResume()>,true,<net.osmtracker.activity.ButtonsPresets: void onResume()>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.VoiceRecOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.PageButtonOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.StillImageOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.layout.GpsStatusRecord,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.layout.UserDefinedLayout,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.view.VoiceRecDialog,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.TextNoteOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.TagButtonOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.PageButtonOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.activity.TrackLogger,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.ACCESS_FINE_LOCATION",net.osmtracker.service.gps.GPSLogger,true,<net.osmtracker.service.gps.GPSLogger: void onCreate()>,false,null,false,null,false
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.view.TextNoteDialog,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.layout.GpsStatusRecord,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.listener.SensorListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.activity.TrackLogger,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.PressureListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.CAMERA",net.osmtracker.layout.GpsStatusRecord,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.activity.TrackDetail,true,<net.osmtracker.activity.TrackDetail: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<net.osmtracker.activity.TrackDetail: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<net.osmtracker.activity.TrackDetail: boolean onOptionsItemSelected(android.view.MenuItem)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.PressureListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.VoiceRecOnClickListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.StillImageOnClickListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.layout.UserDefinedLayout,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.layout.UserDefinedLayout,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.view.TextNoteDialog,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true
osmtracker-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.osmtracker.listener.VoiceRecOnClickListener,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true,<net.osmtracker.listener.StillImageOnClickListener: void onClick(android.view.View)>,true
osmtracker-android.apk,"android.permission.RECORD_AUDIO",net.osmtracker.listener.TextNoteOnClickListener,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,true,<net.osmtracker.activity.TrackLogger: android.app.Dialog onCreateDialog(int)>,trueotgorithm-android.apk,"android.permission.ACCESS_FINE_LOCATION",com.ambit.otgorithm.views.MainActivity,true,<com.ambit.otgorithm.views.MainActivity: void onCreate(android.os.Bundle)>,true,<com.ambit.otgorithm.views.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
otgorithm-android.apk,"android.permission.READ_EXTERNAL_STORAGE",com.ambit.otgorithm.views.UploadActivity,false,null,true,<com.ambit.otgorithm.views.UploadActivity: void startGalleryChooser()>,false,null,false
otgorithm-android.apk,"android.permission.READ_EXTERNAL_STORAGE",com.ambit.otgorithm.modules.PermissionUtils,true,<com.ambit.otgorithm.modules.PermissionUtils: boolean requestPermission(android.app.Activity,int,java.lang.String[])>,false,null,false,null,false
otgorithm-android.apk,"android.permission.ACCESS_COARSE_LOCATION",com.ambit.otgorithm.views.MainActivity,true,<com.ambit.otgorithm.views.MainActivity: void onCreate(android.os.Bundle)>,true,<com.ambit.otgorithm.views.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
otgorithm-android.apk,"android.permission.READ_EXTERNAL_STORAGE",com.ambit.otgorithm.views.UploadActivity$3,true,<com.ambit.otgorithm.modules.PermissionUtils: boolean requestPermission(android.app.Activity,int,java.lang.String[])>,false,null,false,null,false
otgorithm-android.apk,"android.permission.READ_EXTERNAL_STORAGE",com.ambit.otgorithm.views.AddInfoActivity,true,<com.ambit.otgorithm.modules.PermissionUtils: boolean requestPermission(android.app.Activity,int,java.lang.String[])>,true,<com.ambit.otgorithm.views.AddInfoActivity: void startGalleryChooser()>,false,null,trueOurVLE.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.stoneapp.ourvlemoodle2.activities.SignInActivity,true,<com.stoneapp.ourvlemoodle2.activities.SignInActivity: void requestPermissions()>,true,<com.stoneapp.ourvlemoodle2.activities.SignInActivity: void requestPermissions()>,false,null,true
OurVLE.apk,"android.permission.WRITE_CALENDAR",com.stoneapp.ourvlemoodle2.activities.SignInActivity,true,<com.stoneapp.ourvlemoodle2.activities.SignInActivity: void requestPermissions()>,true,<com.stoneapp.ourvlemoodle2.activities.SignInActivity: void requestPermissions()>,false,null,truePaketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.Parcel,true,<com.nitramite.paketinseuranta.Parcel: void createParcelImageDirectory()>,false,null,false,null,false
Paketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.-$$Lambda$BackupManager,true,<com.nitramite.paketinseuranta.BackupManager: boolean hasPermission(android.content.Context,java.lang.String[])>,false,null,false,null,false
Paketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.Archive,true,<com.nitramite.paketinseuranta.Archive: boolean hasPermission(android.content.Context,java.lang.String[])>,false,null,false,null,false
Paketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.-$$Lambda$Archive,true,<com.nitramite.paketinseuranta.Archive: boolean hasPermission(android.content.Context,java.lang.String[])>,false,null,false,null,false
Paketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.-$$Lambda$Parcel,true,<com.nitramite.paketinseuranta.Parcel: void createParcelImageDirectory()>,false,null,false,null,false
Paketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.BackupManager,true,<com.nitramite.paketinseuranta.BackupManager: boolean hasPermission(android.content.Context,java.lang.String[])>,false,null,false,null,false
Paketin-Seuranta.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nitramite.paketinseuranta.DatabaseHelper,true,<com.nitramite.paketinseuranta.Parcel: void createParcelImageDirectory()>,false,null,false,null,falsePalantir.apk,"android.permission.CAMERA",io.ningyuan.palantir.fragments.SceneformFragment,true,<com.google.ar.sceneform.ux.BaseArFragment: void requestDangerousPermissions()>,true,<com.google.ar.sceneform.ux.BaseArFragment: void requestDangerousPermissions()>,false,null,truePaletteCycle.apk,"android.permission.WRITE_EXTERNAL_STORAGE",rak.pixellwp.cycling.preferences.CyclingPreferenceActivity,true,<rak.pixellwp.cycling.preferences.CyclingPreferenceActivity: void reportBug(android.view.View)>,true,<rak.pixellwp.cycling.preferences.CyclingPreferenceActivity: void reportBug(android.view.View)>,false,null,truePaper-Tales.apk,"android.permission.INTERNET",com.james.papertales.activities.SplashActivity,true,<com.james.papertales.activities.SplashActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
Paper-Tales.apk,"android.permission.INTERNET",com.james.papertales.MuzeiArtSource,true,<com.james.papertales.MuzeiArtSource: void onUpdate(int)>,false,null,false,null,false
Paper-Tales.apk,"android.permission.INTERNET",com.james.papertales.views.SquareImageView,true,<com.james.papertales.activities.SplashActivity: void onCreate(android.os.Bundle)>,false,null,false,null,falsePaper-Wallet.apk,"android.permission.CAMERA",ru.valle.btc.ScanActivity,true,<ru.valle.btc.ScanActivity: boolean hasCameraPermission()>,true,<ru.valle.btc.ScanActivity: void requestCameraPermission()>,false,null,trueParkingOfAnsan.apk,"android.permission.ACCESS_FINE_LOCATION",com.alpa_.parkbeommin.parkingofansan.MainActivity,true,<com.alpa_.parkbeommin.parkingofansan.MainActivity: void startLocationUpdates()>,true,<com.alpa_.parkbeommin.parkingofansan.MainActivity$6: void onClick(android.content.DialogInterface,int)>,true,<com.alpa_.parkbeommin.parkingofansan.MainActivity: void checkPermissions()>,true
ParkingOfAnsan.apk,"android.permission.ACCESS_COARSE_LOCATION",com.alpa_.parkbeommin.parkingofansan.MainActivity,true,<com.alpa_.parkbeommin.parkingofansan.MainActivity: void startLocationUpdates()>,false,null,false,null,falsePebbleDialer-Android.apk,"android.permission.BLUETOOTH",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,false,null,false
PebbleDialer-Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.PROCESS_OUTGOING_CALLS",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.matejdro.pebbledialer.PebbleDialerApplication,true,<com.matejdro.pebblecommons.util.LogWriter: void open()>,false,null,false,null,false
PebbleDialer-Android.apk,"android.permission.SEND_SMS",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.RECORD_AUDIO",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.READ_SMS",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.READ_CALL_LOG",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.ANSWER_PHONE_CALLS",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.CALL_PHONE",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.READ_CONTACTS",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,true
PebbleDialer-Android.apk,"android.permission.READ_PHONE_STATE",com.matejdro.pebbledialer.ui.MainActivity,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,true,<com.matejdro.pebbledialer.ui.MainActivity: void checkPermissions()>,false,null,truephone-saver.apk,"android.permission.READ_EXTERNAL_STORAGE",link.standen.michael.phonesaver.activity.FolderListActivity,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.WRITE_EXTERNAL_STORAGE",link.standen.michael.phonesaver.util.DebugLogger,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.WRITE_EXTERNAL_STORAGE",link.standen.michael.phonesaver.util.DialogHelper,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.READ_EXTERNAL_STORAGE",link.standen.michael.phonesaver.util.PreferenceHelper,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.READ_EXTERNAL_STORAGE",link.standen.michael.phonesaver.util.DialogHelper,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.WRITE_EXTERNAL_STORAGE",link.standen.michael.phonesaver.util.PreferenceHelper,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.READ_EXTERNAL_STORAGE",link.standen.michael.phonesaver.util.DebugLogger,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.WRITE_EXTERNAL_STORAGE",link.standen.michael.phonesaver.activity.FolderListActivity$onCreate,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.READ_EXTERNAL_STORAGE",link.standen.michael.phonesaver.activity.FolderListActivity$onCreate,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,true
phone-saver.apk,"android.permission.WRITE_EXTERNAL_STORAGE",link.standen.michael.phonesaver.activity.FolderListActivity,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,true,<link.standen.michael.phonesaver.activity.FolderListActivity: void testPermissions()>,false,null,truepic-my-allergy-android.apk,"android.permission.READ_EXTERNAL_STORAGE",com.anupya.anupya_pamidimukkala.picmyallergy.Upload,true,<com.anupya.anupya_pamidimukkala.picmyallergy.Upload: void onActivityResult(int,int,android.content.Intent)>,true,<com.anupya.anupya_pamidimukkala.picmyallergy.Upload: void onActivityResult(int,int,android.content.Intent)>,false,null,truePIDfromBT.apk,"android.permission.ACCESS_COARSE_LOCATION",com.oprobots.robotaleh.pidfrombt.MainActivity,true,<com.oprobots.robotaleh.pidfrombt.MainActivity$1: void onClick(android.content.DialogInterface,int)>,true,<com.oprobots.robotaleh.pidfrombt.MainActivity$1: void onClick(android.content.DialogInterface,int)>,false,null,truePilferShushJammer.apk,"android.permission.RECORD_AUDIO",cityfreqs.com.pilfershushjammer.MainActivity,true,<cityfreqs.com.pilfershushjammer.MainActivity: void onCreate(android.os.Bundle)>,true,<cityfreqs.com.pilfershushjammer.MainActivity: void onCreate(android.os.Bundle)>,true,<cityfreqs.com.pilfershushjammer.MainActivity: void onCreate(android.os.Bundle)>,true
PilferShushJammer.apk,"android.permission.RECORD_AUDIO",cityfreqs.com.pilfershushjammer.ui.SectionsPagerAdapter,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,falsepinpoi.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.fvasco.pinpoi.MainActivity$showRestoreBackupConfirm,true,<io.github.fvasco.pinpoi.MainActivity: void onResume()>,false,null,false,null,false
pinpoi.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.fvasco.pinpoi.MainActivity,true,<io.github.fvasco.pinpoi.MainActivity: void createBackup()>,true,<io.github.fvasco.pinpoi.MainActivity: void createBackup()>,false,null,true
pinpoi.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.fvasco.pinpoi.MainActivity$showCreateBackupConfirm,true,<io.github.fvasco.pinpoi.MainActivity: void onResume()>,false,null,false,null,false
pinpoi.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.fvasco.pinpoi.MainActivity,true,<io.github.fvasco.pinpoi.MainActivity: void showRestoreBackupConfirm()>,true,<io.github.fvasco.pinpoi.MainActivity: void showRestoreBackupConfirm()>,false,null,true
pinpoi.apk,"android.permission.INTERNET",io.github.fvasco.pinpoi.PlacemarkListActivity,true,<io.github.fvasco.pinpoi.PlacemarkListActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
pinpoi.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.fvasco.pinpoi.util.UtilKt$openFileChooser,true,<io.github.fvasco.pinpoi.MainActivity: void onResume()>,false,null,false,null,false
pinpoi.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.fvasco.pinpoi.PlacemarkCollectionListActivity,true,<io.github.fvasco.pinpoi.PlacemarkCollectionListActivity: void openFileChooser(android.view.View)>,true,<io.github.fvasco.pinpoi.PlacemarkCollectionListActivity: void openFileChooser(android.view.View)>,false,null,true
pinpoi.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.fvasco.pinpoi.MainActivity$openSearchAddress,true,<io.github.fvasco.pinpoi.MainActivity: void onResume()>,false,null,false,null,false
pinpoi.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.fvasco.pinpoi.MainActivity,true,<io.github.fvasco.pinpoi.MainActivity: void onResume()>,true,<io.github.fvasco.pinpoi.MainActivity: void setUseLocationManagerListener(boolean)>,false,null,true
pinpoi.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.fvasco.pinpoi.MainActivity$showCreateBackupConfirm,true,<io.github.fvasco.pinpoi.MainActivity: void createBackup()>,true,<io.github.fvasco.pinpoi.MainActivity: void createBackup()>,false,null,true
pinpoi.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.fvasco.pinpoi.MainActivity$showRestoreBackupConfirm$1,true,<io.github.fvasco.pinpoi.MainActivity: void onResume()>,false,null,false,null,false
pinpoi.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.fvasco.pinpoi.util.DebugUtilKt,true,<io.github.fvasco.pinpoi.MainActivity: void showRestoreBackupConfirm()>,true,<io.github.fvasco.pinpoi.MainActivity: void showRestoreBackupConfirm()>,false,null,true
pinpoi.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.fvasco.pinpoi.PlacemarkCollectionDetailActivity,true,<io.github.fvasco.pinpoi.PlacemarkCollectionDetailActivity: void openFileChooser(android.view.View)>,true,<io.github.fvasco.pinpoi.PlacemarkCollectionDetailActivity: void openFileChooser(android.view.View)>,false,null,truePixelKnot.apk,"android.permission.READ_EXTERNAL_STORAGE",info.guardianproject.pixelknot.AlbumLayoutManager,true,<info.guardianproject.pixelknot.SendActivity: void setCurrentMode()>,false,null,false,null,false
PixelKnot.apk,"android.permission.READ_EXTERNAL_STORAGE",info.guardianproject.pixelknot.ActivityBase,true,<info.guardianproject.pixelknot.SendActivity: void setCurrentMode()>,false,null,false,null,false
PixelKnot.apk,"android.permission.READ_EXTERNAL_STORAGE",info.guardianproject.pixelknot.SendActivity,true,<info.guardianproject.pixelknot.SendActivity: void setCurrentMode()>,false,null,false,null,falsePlamber-Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ua.plamber_android.activitys.LoginActivity,true,<com.ua.plamber_android.activitys.LoginActivity: boolean checkPermission()>,true,<com.ua.plamber_android.activitys.LoginActivity: void runQuestionPermissions()>,false,null,true
Plamber-Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ua.plamber_android.activitys.MainActivity,true,<com.ua.plamber_android.activitys.LoginActivity: boolean checkPermission()>,true,<com.ua.plamber_android.activitys.LoginActivity: void runQuestionPermissions()>,false,null,true
Plamber-Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ua.plamber_android.api.APIUtils,true,<com.ua.plamber_android.activitys.LoginActivity: boolean checkPermission()>,true,<com.ua.plamber_android.activitys.LoginActivity: void runQuestionPermissions()>,false,null,true
Plamber-Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ua.plamber_android.utils.PreferenceUtils,true,<com.ua.plamber_android.activitys.LoginActivity: boolean checkPermission()>,true,<com.ua.plamber_android.activitys.LoginActivity: void runQuestionPermissions()>,false,null,truePlanIt.apk,"android.permission.READ_CONTACTS",com.planit.planit.InvitedPageActivity,true,<com.planit.planit.InvitedPageActivity: void onClick(android.view.View)>,true,<com.planit.planit.InvitedPageActivity: void onClick(android.view.View)>,false,null,truePlanster.apk,"android.permission.READ_EXTERNAL_STORAGE",com.fome.planster.TaskCreationActivity,true,<com.fome.planster.PermissionManager: void askForPermission(java.lang.String,java.lang.Integer,android.content.Context,android.app.Activity)>,false,null,true,<com.fome.planster.PermissionManager: void askForPermission(java.lang.String,java.lang.Integer,android.content.Context,android.app.Activity)>,false
Planster.apk,"android.permission.READ_CONTACTS",com.fome.planster.PermissionManager,true,<com.fome.planster.TaskCreationActivity: void getContacts()>,false,null,false,null,false
Planster.apk,"android.permission.READ_CONTACTS",com.fome.planster.models.Time,true,<com.fome.planster.TaskCreationActivity: void getContacts()>,false,null,false,null,false
Planster.apk,"android.permission.READ_CONTACTS",com.fome.planster.models.TimePeriod,true,<com.fome.planster.TaskCreationActivity: void getContacts()>,false,null,false,null,false
Planster.apk,"android.permission.READ_CONTACTS",com.fome.planster.TasksManager,true,<com.fome.planster.TaskCreationActivity: void setTaskData(com.fome.planster.models.Task)>,false,null,false,null,false
Planster.apk,"android.permission.READ_CONTACTS",com.fome.planster.TaskCreationActivity,true,<com.fome.planster.TaskCreationActivity: void getContacts()>,false,null,false,null,false
Planster.apk,"android.permission.READ_EXTERNAL_STORAGE",com.fome.planster.PermissionManager,true,<com.fome.planster.PermissionManager: void askForPermission(java.lang.String,java.lang.Integer,android.content.Context,android.app.Activity)>,false,null,true,<com.fome.planster.PermissionManager: void askForPermission(java.lang.String,java.lang.Integer,android.content.Context,android.app.Activity)>,false
Planster.apk,"android.permission.READ_CONTACTS",com.fome.planster.models.List,true,<com.fome.planster.TaskCreationActivity: void getContacts()>,false,null,false,null,falsePoint.im-Android.apk,"android.permission.READ_EXTERNAL_STORAGE",org.itishka.pointim.activities.ConnectedActivity,true,<org.itishka.pointim.activities.NewPostActivity: void onCreate(android.os.Bundle)>,true,<org.itishka.pointim.activities.NewPostActivity: void onCreate(android.os.Bundle)>,false,null,true
Point.im-Android.apk,"android.permission.READ_EXTERNAL_STORAGE",org.itishka.pointim.activities.NewPostActivity,true,<org.itishka.pointim.activities.NewPostActivity: void onCreate(android.os.Bundle)>,true,<org.itishka.pointim.activities.NewPostActivity: void onCreate(android.os.Bundle)>,false,null,truePokidex.apk,"android.permission.CAMERA",org.tensorflow.lite.examples.classification.env.Logger,true,<org.tensorflow.lite.examples.classification.CameraActivity: boolean hasPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,true
Pokidex.apk,"android.permission.CAMERA",org.tensorflow.lite.examples.classification.CameraActivity,true,<org.tensorflow.lite.examples.classification.CameraActivity: boolean hasPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,truepolite.apk,"android.permission.READ_CALENDAR",me.camsteffen.polite.MainActivity,true,<me.camsteffen.polite.MainActivity: boolean b(int)>,true,<me.camsteffen.polite.MainActivity: boolean b(int)>,true,<me.camsteffen.polite.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,truePoopd.apk,"android.permission.ACCESS_FINE_LOCATION",lars.wherehaveishit.DBHandler,true,<lars.wherehaveishit.MapsActivity: boolean checkLocationPermission()>,true,<lars.wherehaveishit.MapsActivity: boolean checkLocationPermission()>,true,<lars.wherehaveishit.MapsActivity: boolean checkLocationPermission()>,true
Poopd.apk,"android.permission.ACCESS_FINE_LOCATION",lars.wherehaveishit.MapsActivity,true,<lars.wherehaveishit.MapsActivity: void onResume()>,true,<lars.wherehaveishit.MapsActivity: boolean checkLocationPermission()>,true,<lars.wherehaveishit.MapsActivity: boolean checkLocationPermission()>,truepower-menu.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nkming.powermenu.ScreenshotActivity,true,<com.nkming.powermenu.PermissionUtils: boolean hasWriteExternalStorage(android.content.Context)>,true,<com.nkming.powermenu.PermissionUtils: void requestWriteExternalStorage(android.app.Activity,int)>,false,null,true
power-menu.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nkming.powermenu.PermissionUtils,true,<com.nkming.powermenu.PermissionUtils: boolean hasWriteExternalStorage(android.content.Context)>,true,<com.nkming.powermenu.PermissionUtils: void requestWriteExternalStorage(android.app.Activity,int)>,false,null,true
power-menu.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nkming.powermenu._BaseShortcutActivity,true,<com.nkming.powermenu.PermissionUtils: boolean hasWriteExternalStorage(android.content.Context)>,false,null,false,null,falseppsspp.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.ppsspp.ppsspp.CameraHelper,true,<org.ppsspp.ppsspp.NativeActivity: void sendInitialGrants()>,false,null,false,null,false
ppsspp.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.ppsspp.ppsspp.LocationHelper,true,<org.ppsspp.ppsspp.NativeActivity: void sendInitialGrants()>,false,null,false,null,false
ppsspp.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.ppsspp.ppsspp.NativeActivity,true,<org.ppsspp.ppsspp.NativeActivity: void sendInitialGrants()>,false,null,false,null,false
ppsspp.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.ppsspp.ppsspp.AudioFocusChangeListener,true,<org.ppsspp.ppsspp.NativeActivity: void sendInitialGrants()>,false,null,false,null,false
ppsspp.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.ppsspp.ppsspp.PpssppActivity,true,<org.ppsspp.ppsspp.NativeActivity: void sendInitialGrants()>,false,null,false,null,falsepretixdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",eu.pretix.pretixdroid.ui.MainActivity,true,<eu.pretix.pretixdroid.ui.MainActivity: void onCreate(android.os.Bundle)>,true,<eu.pretix.pretixdroid.ui.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
pretixdroid.apk,"android.permission.CAMERA",eu.pretix.pretixdroid.ui.MainActivity,true,<eu.pretix.pretixdroid.ui.MainActivity: void onCreate(android.os.Bundle)>,true,<eu.pretix.pretixdroid.ui.MainActivity: void onCreate(android.os.Bundle)>,false,null,trueprivacy-friendly-boardgame-clock.apk,"android.permission.READ_EXTERNAL_STORAGE",org.secuso.privacyfriendlyboardgameclock.activities.BaseActivity,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void importBackupButton(android.view.View)>,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void importBackupButton(android.view.View)>,false,null,true
privacy-friendly-boardgame-clock.apk,"android.permission.READ_EXTERNAL_STORAGE",org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void importBackupButton(android.view.View)>,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void importBackupButton(android.view.View)>,false,null,true
privacy-friendly-boardgame-clock.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void exportBackupButton(android.view.View)>,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void exportBackupButton(android.view.View)>,false,null,true
privacy-friendly-boardgame-clock.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlyboardgameclock.activities.BaseActivity,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void exportBackupButton(android.view.View)>,true,<org.secuso.privacyfriendlyboardgameclock.activities.BackUpActivity: void exportBackupButton(android.view.View)>,false,null,trueprivacy-friendly-notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlynotes.ui.AudioNoteActivity,true,<org.secuso.privacyfriendlynotes.ui.AudioNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.AudioNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.AudioNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true
privacy-friendly-notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlynotes.ui.ChecklistNoteActivity,true,<org.secuso.privacyfriendlynotes.ui.ChecklistNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.ChecklistNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.ChecklistNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true
privacy-friendly-notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlynotes.ui.SketchActivity,true,<org.secuso.privacyfriendlynotes.ui.SketchActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.SketchActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.SketchActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true
privacy-friendly-notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlynotes.ui.TextNoteActivity,true,<org.secuso.privacyfriendlynotes.ui.TextNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.TextNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<org.secuso.privacyfriendlynotes.ui.TextNoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true
privacy-friendly-notes.apk,"android.permission.RECORD_AUDIO",org.secuso.privacyfriendlynotes.ui.AudioNoteActivity,true,<org.secuso.privacyfriendlynotes.ui.AudioNoteActivity: void onCreate(android.os.Bundle)>,true,<org.secuso.privacyfriendlynotes.ui.AudioNoteActivity: void onCreate(android.os.Bundle)>,true,<org.secuso.privacyfriendlynotes.ui.AudioNoteActivity: void onCreate(android.os.Bundle)>,true
privacy-friendly-notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlynotes.database.DbAccess,false,null,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,falseprivacy-friendly-pain-diary.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlypaindiary.activities.ExportPDFActivity,true,<org.secuso.privacyfriendlypaindiary.activities.ExportPDFActivity: java.io.File exportAsPDF(android.graphics.pdf.PdfDocument)>,true,<org.secuso.privacyfriendlypaindiary.activities.ExportPDFActivity: java.io.File exportAsPDF(android.graphics.pdf.PdfDocument)>,false,null,true
privacy-friendly-pain-diary.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlypaindiary.helpers.PdfCreator,true,<org.secuso.privacyfriendlypaindiary.activities.ExportPDFActivity: java.io.File exportAsPDF(android.graphics.pdf.PdfDocument)>,true,<org.secuso.privacyfriendlypaindiary.activities.ExportPDFActivity: java.io.File exportAsPDF(android.graphics.pdf.PdfDocument)>,false,null,trueprivacy-friendly-sketching.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.secuso.privacyfriendlysketching.activities.SketchActivity,true,<org.secuso.privacyfriendlysketching.activities.SketchActivity$6: void onClick(android.content.DialogInterface,int)>,true,<org.secuso.privacyfriendlysketching.activities.SketchActivity$6: void onClick(android.content.DialogInterface,int)>,false,null,trueprivacy-friendly-torchlight.apk,"android.permission.CAMERA",com.secuso.torchlight2.ui.BaseActivity,true,<com.secuso.torchlight2.ui.MainActivity$2: void onClick(android.view.View)>,true,<com.secuso.torchlight2.ui.MainActivity$2: void onClick(android.view.View)>,false,null,true
privacy-friendly-torchlight.apk,"android.permission.CAMERA",com.secuso.torchlight2.ui.MainActivity,true,<com.secuso.torchlight2.ui.MainActivity$2: void onClick(android.view.View)>,true,<com.secuso.torchlight2.ui.MainActivity$2: void onClick(android.view.View)>,false,null,trueproject-handsomeGo-Android.apk,"android.permission.CAMERA",com.hyeong.handsomego.qr_code.CustomScannerActivity,true,<com.journeyapps.barcodescanner.CaptureManager: void openCameraWithPermission()>,true,<com.journeyapps.barcodescanner.CaptureManager: void openCameraWithPermission()>,false,null,trueproject-miki-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",wwckl.projectmiki.utils.RunTimePermission,true,<wwckl.projectmiki.utils.RunTimePermission: boolean checkHasPermission(android.content.Context,java.lang.String)>,false,null,false,null,false
project-miki-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",wwckl.projectmiki.utils.MikiLogger,false,null,true,<wwckl.projectmiki.activity.MainActivity: void startGallery()>,false,null,false
project-miki-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",wwckl.projectmiki.activity.MainActivity,true,<wwckl.projectmiki.utils.RunTimePermission: boolean checkHasPermission(android.content.Context,java.lang.String)>,true,<wwckl.projectmiki.activity.MainActivity: void startGallery()>,false,null,true
project-miki-android.apk,"android.permission.READ_EXTERNAL_STORAGE",wwckl.projectmiki.activity.MainActivity,true,<wwckl.projectmiki.utils.RunTimePermission: boolean checkHasPermission(android.content.Context,java.lang.String)>,true,<wwckl.projectmiki.activity.MainActivity: void startGallery()>,false,null,true
project-miki-android.apk,"android.permission.CAMERA",wwckl.projectmiki.utils.MikiLogger,false,null,true,<wwckl.projectmiki.activity.MainActivity: void startCamera()>,false,null,false
project-miki-android.apk,"android.permission.CAMERA",wwckl.projectmiki.utils.RunTimePermission,true,<wwckl.projectmiki.utils.RunTimePermission: boolean checkHasPermission(android.content.Context,java.lang.String)>,false,null,false,null,false
project-miki-android.apk,"android.permission.CAMERA",wwckl.projectmiki.activity.MainActivity,true,<wwckl.projectmiki.utils.RunTimePermission: boolean checkHasPermission(android.content.Context,java.lang.String)>,true,<wwckl.projectmiki.activity.MainActivity: void startCamera()>,false,null,true
project-miki-android.apk,"android.permission.READ_EXTERNAL_STORAGE",wwckl.projectmiki.utils.RunTimePermission,true,<wwckl.projectmiki.utils.RunTimePermission: boolean checkHasPermission(android.content.Context,java.lang.String)>,false,null,false,null,false
project-miki-android.apk,"android.permission.READ_EXTERNAL_STORAGE",wwckl.projectmiki.utils.MikiLogger,false,null,true,<wwckl.projectmiki.activity.MainActivity: void startGallery()>,false,null,falsepromptpay-qr-40.apk,"android.permission.CAMERA",com.diewland.android.qr_pp_40.MainActivity,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,false,null,true
promptpay-qr-40.apk,"android.permission.CAMERA",com.diewland.android.qr_pp_40.Util,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,false,null,true
promptpay-qr-40.apk,"android.permission.READ_EXTERNAL_STORAGE",com.diewland.android.qr_pp_40.Util,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,false,null,true
promptpay-qr-40.apk,"android.permission.READ_CONTACTS",com.diewland.android.qr_pp_40.Util,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,false,null,true
promptpay-qr-40.apk,"android.permission.READ_EXTERNAL_STORAGE",com.diewland.android.qr_pp_40.MainActivity,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,false,null,true
promptpay-qr-40.apk,"android.permission.READ_CONTACTS",com.diewland.android.qr_pp_40.MainActivity,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,true,<com.diewland.android.qr_pp_40.Util: boolean requestPermissions(android.app.Activity,int)>,false,null,trueprotrip.apk,"android.permission.ACCESS_FINE_LOCATION",me.sabareesh.trippie.ui.PlaceListActivity,true,<me.sabareesh.trippie.ui.MainActivity: void requestLocationPermission()>,true,<me.sabareesh.trippie.ui.MainActivity: void requestLocationPermission()>,false,null,true
protrip.apk,"android.permission.ACCESS_FINE_LOCATION",me.sabareesh.trippie.util.Utils,true,<me.sabareesh.trippie.ui.SplashActivity: void getLocation()>,false,null,false,null,false
protrip.apk,"android.permission.ACCESS_FINE_LOCATION",me.sabareesh.trippie.ui.SplashActivity,true,<me.sabareesh.trippie.ui.MainActivity: void requestLocationPermission()>,true,<me.sabareesh.trippie.ui.MainActivity: void requestLocationPermission()>,false,null,true
protrip.apk,"android.permission.ACCESS_FINE_LOCATION",me.sabareesh.trippie.ui.MainActivity,true,<me.sabareesh.trippie.ui.MainActivity: void requestLocationPermission()>,true,<me.sabareesh.trippie.ui.MainActivity: void requestLocationPermission()>,false,null,truepslab-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.pslab.activity.SensorDataLoggerActivity,true,<io.pslab.activity.SensorDataLoggerActivity: void onCreate(android.os.Bundle)>,true,<io.pslab.activity.SensorDataLoggerActivity: void onCreate(android.os.Bundle)>,false,null,true
pslab-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.pslab.activity.MultimeterActivity,true,<io.pslab.activity.MultimeterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<io.pslab.activity.MultimeterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,false,null,true
pslab-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.pslab.others.SwipeGestureDetector,true,<io.pslab.activity.MultimeterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<io.pslab.activity.MultimeterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,false,null,true
pslab-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.pslab.others.GPSLogger,true,<io.pslab.activity.MultimeterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,true,<io.pslab.activity.MultimeterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>,false,null,truePTSD-Aid.apk,"android.permission.READ_CONTACTS",com.tytanapps.ptsd.a.b,false,null,true,<com.tytanapps.ptsd.a.b: void a(android.app.Activity)>,false,null,false
PTSD-Aid.apk,"android.permission.READ_CONTACTS",com.tytanapps.ptsd.MainActivity,false,null,true,<com.tytanapps.ptsd.a.b: void a(android.app.Activity)>,false,null,falsepunti-burraco.apk,"android.permission.ACCESS_COARSE_LOCATION",com.marco97pa.puntiburraco.NearbyDiscoverActivity,false,null,true,<com.marco97pa.puntiburraco.NearbyDiscoverActivity: void onStart()>,false,null,false
punti-burraco.apk,"android.permission.ACCESS_FINE_LOCATION",com.marco97pa.puntiburraco.NearbyDiscoverActivity,false,null,true,<com.marco97pa.puntiburraco.NearbyDiscoverActivity: void onStart()>,false,null,falsepusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.g,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.k,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.p,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: boolean l()>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void m()>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.o,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.n,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: boolean l()>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void m()>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.m,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.PushActivity,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,false,null,true
pusher.apk,"android.permission.ACCESS_COARSE_LOCATION",com.github.akinaru.roboticbuttonpusher.activity.a,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,true,<com.github.akinaru.roboticbuttonpusher.activity.PushActivity: void onCreate(android.os.Bundle)>,false,null,trueQart.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.scola.qart.Util,true,<io.github.scola.qart.MainActivity: boolean isStoragePermissionGranted(int)>,true,<io.github.scola.qart.MainActivity: boolean isStoragePermissionGranted(int)>,false,null,true
Qart.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.scola.qart.MainActivity$2,true,<io.github.scola.qart.MainActivity: boolean isStoragePermissionGranted(int)>,true,<io.github.scola.qart.MainActivity: boolean isStoragePermissionGranted(int)>,false,null,true
Qart.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.scola.qart.QRCodeResultActivity,true,<io.github.scola.qart.QRCodeResultActivity: boolean isStoragePermissionGranted(int)>,true,<io.github.scola.qart.QRCodeResultActivity: boolean isStoragePermissionGranted(int)>,false,null,true
Qart.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.scola.qart.MainActivity,true,<io.github.scola.qart.MainActivity: boolean isStoragePermissionGranted(int)>,true,<io.github.scola.qart.MainActivity: boolean isStoragePermissionGranted(int)>,false,null,true
Qart.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.scola.qart.QRCodeResultActivity$1,true,<io.github.scola.qart.QRCodeResultActivity: boolean isStoragePermissionGranted(int)>,true,<io.github.scola.qart.QRCodeResultActivity: boolean isStoragePermissionGranted(int)>,false,null,trueqBittorrent-Client.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.lgallardo.qbittorrentclient.SettingsActivity$d,false,null,true,<com.lgallardo.qbittorrentclient.SettingsActivity$f: void onClick(android.content.DialogInterface,int)>,true,<com.lgallardo.qbittorrentclient.SettingsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
qBittorrent-Client.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.lgallardo.qbittorrentclient.SettingsActivity$c,false,null,true,<com.lgallardo.qbittorrentclient.SettingsActivity$f: void onClick(android.content.DialogInterface,int)>,true,<com.lgallardo.qbittorrentclient.SettingsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
qBittorrent-Client.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.lgallardo.qbittorrentclient.SettingsActivity$b,false,null,true,<com.lgallardo.qbittorrentclient.SettingsActivity$f: void onClick(android.content.DialogInterface,int)>,true,<com.lgallardo.qbittorrentclient.SettingsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
qBittorrent-Client.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.lgallardo.qbittorrentclient.SettingsActivity$a,false,null,true,<com.lgallardo.qbittorrentclient.SettingsActivity$f: void onClick(android.content.DialogInterface,int)>,true,<com.lgallardo.qbittorrentclient.SettingsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
qBittorrent-Client.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.lgallardo.qbittorrentclient.SettingsActivity,true,<com.lgallardo.qbittorrentclient.SettingsActivity: void a()>,true,<com.lgallardo.qbittorrentclient.SettingsActivity$f: void onClick(android.content.DialogInterface,int)>,true,<com.lgallardo.qbittorrentclient.SettingsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,true
qBittorrent-Client.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.lgallardo.qbittorrentclient.MainActivity,true,<com.lgallardo.qbittorrentclient.MainActivity: void l()>,true,<b.c.a.u: void onClick(android.content.DialogInterface,int)>,true,<com.lgallardo.qbittorrentclient.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,trueQR-Code-Scanner-Android-App.apk,"android.permission.CAMERA",com.cdac.qrcodescanner.ScannerBarcodeActivity,true,<com.cdac.qrcodescanner.ScannerBarcodeActivity: void openCamera()>,true,<com.cdac.qrcodescanner.ScannerBarcodeActivity: void openCamera()>,false,null,true
QR-Code-Scanner-Android-App.apk,"android.permission.CAMERA",com.cdac.qrcodescanner.LedgerViewActivity,false,null,true,<com.cdac.qrcodescanner.LedgerViewActivity: void onClick(android.view.View)>,false,null,false
QR-Code-Scanner-Android-App.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.cdac.qrcodescanner.PictureBarcodeActivity,false,null,true,<com.cdac.qrcodescanner.PictureBarcodeActivity: void onClick(android.view.View)>,false,null,false
QR-Code-Scanner-Android-App.apk,"android.permission.CAMERA",com.cdac.qrcodescanner.PictureBarcodeActivity,false,null,true,<com.cdac.qrcodescanner.PictureBarcodeActivity: void onClick(android.view.View)>,false,null,false
QR-Code-Scanner-Android-App.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.cdac.qrcodescanner.LedgerViewActivity,false,null,true,<com.cdac.qrcodescanner.LedgerViewActivity: void onClick(android.view.View)>,false,null,falseQuicksend.apk,"android.permission.READ_EXTERNAL_STORAGE",com.davidmadethis.quicksend.MainActivity,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,false,null,true
Quicksend.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.davidmadethis.quicksend.fragments.HomeFragment,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,false,null,true
Quicksend.apk,"android.permission.READ_EXTERNAL_STORAGE",com.davidmadethis.quicksend.fragments.HomeFragment,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,false,null,true
Quicksend.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.davidmadethis.quicksend.MainActivity,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,true,<com.davidmadethis.quicksend.MainActivity: void permissionAsk()>,false,null,truequotes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.library.apple.quotes.image,true,<com.library.apple.quotes.image$5: void onClick(android.view.View)>,true,<com.library.apple.quotes.image$8: void onClick(android.content.DialogInterface,int)>,true,<com.library.apple.quotes.image: void requestStoragePermission()>,trueRandomNumberGenerator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.hirbod.randomnumbergenerator.ShowNumsActivity,true,<com.hirbod.randomnumbergenerator.b: boolean a(android.app.Activity)>,true,<com.hirbod.randomnumbergenerator.b$d: void onClick(android.content.DialogInterface,int)>,true,<com.hirbod.randomnumbergenerator.b: boolean a(android.app.Activity)>,true
RandomNumberGenerator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.hirbod.randomnumbergenerator.MultiStepGeneratorActivity,true,<com.hirbod.randomnumbergenerator.b: boolean a(android.app.Activity)>,true,<com.hirbod.randomnumbergenerator.b$d: void onClick(android.content.DialogInterface,int)>,true,<com.hirbod.randomnumbergenerator.b: boolean a(android.app.Activity)>,true
RandomNumberGenerator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.hirbod.randomnumbergenerator.b,true,<com.hirbod.randomnumbergenerator.b: boolean a(android.app.Activity)>,true,<com.hirbod.randomnumbergenerator.b$d: void onClick(android.content.DialogInterface,int)>,true,<com.hirbod.randomnumbergenerator.b: boolean a(android.app.Activity)>,true
RandomNumberGenerator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.hirbod.randomnumbergenerator.MultiStepGeneratorActivity$b,false,null,true,<com.hirbod.randomnumbergenerator.b$d: void onClick(android.content.DialogInterface,int)>,false,null,falseranepa_timetable.apk,"android.permission.WRITE_CALENDAR",ru.coolone.ranepatimetable.WidgetProvider,true,<com.nabinbhandari.android.permissions.b: void a(android.content.Context,java.lang.String[],java.lang.String,com.nabinbhandari.android.permissions.b$a,com.nabinbhandari.android.permissions.a)>,false,null,false,null,false
ranepa_timetable.apk,"android.permission.WRITE_CALENDAR",ru.coolone.ranepatimetable.TimetableDatabase,true,<com.nabinbhandari.android.permissions.b: void a(android.content.Context,java.lang.String[],java.lang.String,com.nabinbhandari.android.permissions.b$a,com.nabinbhandari.android.permissions.a)>,false,null,false,null,false
ranepa_timetable.apk,"android.permission.READ_CALENDAR",ru.coolone.ranepatimetable.TimetableDatabase,true,<com.nabinbhandari.android.permissions.b: void a(android.content.Context,java.lang.String[],java.lang.String,com.nabinbhandari.android.permissions.b$a,com.nabinbhandari.android.permissions.a)>,false,null,false,null,false
ranepa_timetable.apk,"android.permission.READ_CALENDAR",ru.coolone.ranepatimetable.WidgetProvider,true,<com.nabinbhandari.android.permissions.b: void a(android.content.Context,java.lang.String[],java.lang.String,com.nabinbhandari.android.permissions.b$a,com.nabinbhandari.android.permissions.a)>,false,null,false,null,falseRemindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.util.GeofenceUtil,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.util.AlarmManagerUtil,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.app.activities.PlaceActivity,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,true,<ve.com.abicelis.remindy.app.activities.PlaceActivity: void moveCameraToLastKnownLocation()>,false,null,true
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.util.AttachmentUtil,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.util.SharedPreferenceUtil,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.database.RemindyDAO,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.app.activities.TaskActivity,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.enums.ReminderType,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.util.SnackbarUtil,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,false
Remindy.apk,"android.permission.ACCESS_FINE_LOCATION",ve.com.abicelis.remindy.app.activities.TaskDetailActivity,true,<ve.com.abicelis.remindy.util.GeofenceUtil: void updateGeofences(android.content.Context,com.google.android.gms.common.api.GoogleApiClient)>,false,null,false,null,falseRemote-Control-PC.apk,"android.permission.READ_EXTERNAL_STORAGE",me.varunon9.remotecontrolpc.MainActivity,true,<me.varunon9.remotecontrolpc.MainActivity: void checkForPermission()>,true,<me.varunon9.remotecontrolpc.MainActivity: void checkForPermission()>,true,<me.varunon9.remotecontrolpc.MainActivity: void checkForPermission()>,trueRetroArch.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.retroarch.browser.mainmenu.MainMenuActivity,true,<com.retroarch.browser.mainmenu.MainMenuActivity: boolean addPermission(java.util.List,java.lang.String)>,true,<com.retroarch.browser.mainmenu.MainMenuActivity: void checkRuntimePermissions()>,true,<com.retroarch.browser.mainmenu.MainMenuActivity: boolean addPermission(java.util.List,java.lang.String)>,true
RetroArch.apk,"android.permission.READ_EXTERNAL_STORAGE",com.retroarch.browser.mainmenu.MainMenuActivity,true,<com.retroarch.browser.mainmenu.MainMenuActivity: boolean addPermission(java.util.List,java.lang.String)>,true,<com.retroarch.browser.mainmenu.MainMenuActivity: void checkRuntimePermissions()>,true,<com.retroarch.browser.mainmenu.MainMenuActivity: boolean addPermission(java.util.List,java.lang.String)>,true
RetroArch.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.retroarch.browser.preferences.util.UserPreferences,false,null,true,<com.retroarch.browser.mainmenu.MainMenuActivity: void checkRuntimePermissions()>,false,null,false
RetroArch.apk,"android.permission.READ_EXTERNAL_STORAGE",com.retroarch.browser.preferences.util.UserPreferences,false,null,true,<com.retroarch.browser.mainmenu.MainMenuActivity: void checkRuntimePermissions()>,false,null,falseRFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.MainActivity,true,<com.mantz_it.rfanalyzer.MainActivity: void onCreate(android.os.Bundle)>,true,<com.mantz_it.rfanalyzer.MainActivity: void showRecordingDialog()>,false,null,true
RFAnalyzer.apk,"android.permission.READ_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.HackrfSource,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,false,null,true
RFAnalyzer.apk,"android.permission.READ_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.Demodulator,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,false,null,true
RFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.AnalyzerSurface,true,<com.mantz_it.rfanalyzer.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
RFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.BookmarksDialog,true,<com.mantz_it.rfanalyzer.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
RFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.FileIQSource,true,<com.mantz_it.rfanalyzer.MainActivity: void showRecordingDialog()>,true,<com.mantz_it.rfanalyzer.MainActivity: void showRecordingDialog()>,false,null,true
RFAnalyzer.apk,"android.permission.READ_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.MainActivity,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,false,null,true
RFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.BookmarksDialog$EditBookmarkDialog,true,<com.mantz_it.rfanalyzer.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
RFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.BookmarksDialog$EditBookmarkCategoryDialog,true,<com.mantz_it.rfanalyzer.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
RFAnalyzer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.HackrfSource,true,<com.mantz_it.rfanalyzer.MainActivity: void showRecordingDialog()>,true,<com.mantz_it.rfanalyzer.MainActivity: void showRecordingDialog()>,false,null,true
RFAnalyzer.apk,"android.permission.READ_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.AnalyzerProcessingLoop,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,false,null,true
RFAnalyzer.apk,"android.permission.READ_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.FileIQSource,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,false,null,true
RFAnalyzer.apk,"android.permission.READ_EXTERNAL_STORAGE",com.mantz_it.rfanalyzer.Scheduler,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,true,<com.mantz_it.rfanalyzer.MainActivity: boolean openSource()>,false,null,trueRobotCarController-application.apk,"android.permission.ACCESS_FINE_LOCATION",dylanbudgen.robotcarcontroller.FoundDeviceArrayAdapter,true,<dylanbudgen.robotcarcontroller.MainActivity: boolean checkBluetoothPermissions()>,true,<dylanbudgen.robotcarcontroller.MainActivity: boolean checkBluetoothPermissions()>,false,null,true
RobotCarController-application.apk,"android.permission.ACCESS_FINE_LOCATION",dylanbudgen.robotcarcontroller.bluetooth.BleWrapper,true,<dylanbudgen.robotcarcontroller.MainActivity: boolean checkBluetoothPermissions()>,true,<dylanbudgen.robotcarcontroller.MainActivity: boolean checkBluetoothPermissions()>,false,null,true
RobotCarController-application.apk,"android.permission.ACCESS_FINE_LOCATION",dylanbudgen.robotcarcontroller.MainActivity,true,<dylanbudgen.robotcarcontroller.MainActivity: boolean checkBluetoothPermissions()>,true,<dylanbudgen.robotcarcontroller.MainActivity: boolean checkBluetoothPermissions()>,false,null,trueruntrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.data.persistence.ServiceDb,true,<com.muei.apm.runtrack.activities.TrackingActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.TrackingActivity$onRequestPermissionsResult,false,null,true,<com.muei.apm.runtrack.activities.TrackingActivity$requestPermissions$1: void onClick(android.view.View)>,false,null,false
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.TrackingActivity$requestPermissions,false,null,true,<com.muei.apm.runtrack.activities.TrackingActivity$requestPermissions$1: void onClick(android.view.View)>,false,null,false
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.TrackingActivity,true,<com.muei.apm.runtrack.activities.TrackingActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity$requestPermissions$1: void onClick(android.view.View)>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.CAMERA",com.muei.apm.runtrack.activities.BarcodeCaptureActivity$onCreate,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity: void requestPermissions()>,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.CAMERA",com.muei.apm.runtrack.activities.BarcodeCaptureActivity$requestPermissions,false,null,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity$requestPermissions$1: void onClick(android.view.View)>,false,null,false
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.TrackingActivity$onCreate,true,<com.muei.apm.runtrack.activities.TrackingActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.TrackingActivity$onStart$2,false,null,true,<com.muei.apm.runtrack.activities.TrackingActivity$requestPermissions$1: void onClick(android.view.View)>,false,null,false
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.utils.LocationUtils,true,<com.muei.apm.runtrack.activities.TrackingActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.CAMERA",com.muei.apm.runtrack.activities.BarcodeCaptureActivity,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity$requestPermissions$1: void onClick(android.view.View)>,true,<com.muei.apm.runtrack.activities.BarcodeCaptureActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.TrackingActivity$onStart,true,<com.muei.apm.runtrack.activities.TrackingActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity$requestPermissions$1: void onClick(android.view.View)>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true
runtrack.apk,"android.permission.ACCESS_FINE_LOCATION",com.muei.apm.runtrack.activities.tracking.TrackingReceiver,true,<com.muei.apm.runtrack.activities.TrackingActivity: boolean checkPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,true,<com.muei.apm.runtrack.activities.TrackingActivity: void requestPermissions()>,truerxdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",at.jclehner.rxdroid.BackupActivity,true,<at.jclehner.rxdroid.Backup$StorageStateListener: void update(android.content.Context,java.lang.String)>,true,<at.jclehner.rxdroid.BackupActivity: void setContentFragment(boolean)>,false,null,true
rxdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",at.jclehner.rxdroid.ui.DialogLike,true,<at.jclehner.rxdroid.BackupActivity: boolean shouldShowPermissionDialog()>,false,null,false,null,false
rxdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",at.jclehner.rxdroid.util.Components,false,null,true,<at.jclehner.rxdroid.BackupActivity: void setContentFragment(boolean)>,false,null,false
rxdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",at.jclehner.rxdroid.Backup,true,<at.jclehner.rxdroid.Backup$StorageStateListener: void update(android.content.Context,java.lang.String)>,true,<at.jclehner.rxdroid.BackupActivity: void setContentFragment(boolean)>,false,null,true
rxdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",at.jclehner.rxdroid.BackupFragment,true,<at.jclehner.rxdroid.BackupActivity: boolean shouldShowPermissionDialog()>,false,null,false,null,falsesafety-inst.apk,"android.permission.BLUETOOTH",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.repo.UserRepo,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,true
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.model.Settings,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.model.SNote,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.splash.SplashActivity$2,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.history.HistoryActivity,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.utils.SAFCONSTANT,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.utils.ConnectionDetector,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.login.LoginActivity,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.WRITE_EXTERNAL_STORAGE",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.WRITE_EXTERNAL_STORAGE",mn.btgt.safetyinst.splash.SplashActivity,false,null,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.repo.SNoteRepo,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_EXTERNAL_STORAGE",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.CAMERA",mn.btgt.safetyinst.db.repo.UserRepo,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,true
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.splash.SplashActivity,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,true
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.repo.SignDataRepo,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_EXTERNAL_STORAGE",mn.btgt.safetyinst.splash.SplashActivity,false,null,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,false
safety-inst.apk,"android.permission.ACCESS_NETWORK_STATE",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.BLUETOOTH_ADMIN",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_EXTERNAL_STORAGE",mn.btgt.safetyinst.db.repo.UserRepo,false,null,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.MainActivity,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.repo.SettingsRepo,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.CAMERA",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.CAMERA",mn.btgt.safetyinst.splash.SplashActivity,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,true
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.db.model.User,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.READ_PHONE_STATE",mn.btgt.safetyinst.facedetect.FaceDetectActivity,true,<mn.btgt.safetyinst.utils.SAFCONSTANT: java.lang.String getImei(android.content.Context)>,false,null,false,null,false
safety-inst.apk,"android.permission.INTERNET",mn.btgt.safetyinst.welcome.WelcomeActivity,true,<mn.btgt.safetyinst.welcome.WelcomeActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
safety-inst.apk,"android.permission.WRITE_EXTERNAL_STORAGE",mn.btgt.safetyinst.db.repo.UserRepo,false,null,true,<mn.btgt.safetyinst.splash.SplashActivity: void reqPermissions()>,false,null,falseSampleFoodBlog.apk,"android.permission.READ_EXTERNAL_STORAGE",com.droidclan.samplefoodblog.PostActivity,true,<com.droidclan.samplefoodblog.PostActivity$2: void onClick(android.view.View)>,true,<com.droidclan.samplefoodblog.PostActivity$2: void onClick(android.view.View)>,false,null,truesciencetoolkit.apk,"android.permission.ACCESS_COARSE_LOCATION",org.greengin.sciencetoolkit.common.ui.base.RemoteCapableActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.RECORD_AUDIO",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_FINE_LOCATION",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusManager,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_COARSE_LOCATION",org.greengin.sciencetoolkit.common.ui.base.WebViewLoginActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_FINE_LOCATION",org.greengin.sciencetoolkit.common.ui.base.RemoteCapableActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusManager,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_FINE_LOCATION",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.RECORD_AUDIO",org.greengin.sciencetoolkit.common.ui.base.RemoteCapableActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.RECORD_AUDIO",org.greengin.sciencetoolkit.common.ui.base.WebViewLoginActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.RECORD_AUDIO",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusManager,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.greengin.sciencetoolkit.common.ui.base.RemoteCapableActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_COARSE_LOCATION",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.greengin.sciencetoolkit.common.ui.base.WebViewLoginActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_FINE_LOCATION",org.greengin.sciencetoolkit.common.ui.base.WebViewLoginActivity,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,true
sciencetoolkit.apk,"android.permission.ACCESS_COARSE_LOCATION",org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusManager,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,true,<org.greengin.sciencetoolkit.common.logic.appstatus.ApplicationStatusActivity: void checkPermissions()>,false,null,trueScreen-Recorder.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.sanjay.ezyscreenrecorder.MainActivity,true,<com.sanjay.ezyscreenrecorder.Function: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.sanjay.ezyscreenrecorder.MainActivity: void onToggleScreenShare()>,false,null,true
Screen-Recorder.apk,"android.permission.RECORD_AUDIO",com.sanjay.ezyscreenrecorder.Function,true,<com.sanjay.ezyscreenrecorder.Function: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,false
Screen-Recorder.apk,"android.permission.READ_EXTERNAL_STORAGE",com.sanjay.ezyscreenrecorder.MainActivity,true,<com.sanjay.ezyscreenrecorder.Function: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.sanjay.ezyscreenrecorder.MainActivity: void onToggleScreenShare()>,false,null,true
Screen-Recorder.apk,"android.permission.RECORD_AUDIO",com.sanjay.ezyscreenrecorder.MainActivity,true,<com.sanjay.ezyscreenrecorder.Function: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.sanjay.ezyscreenrecorder.MainActivity: void onToggleScreenShare()>,false,null,true
Screen-Recorder.apk,"android.permission.READ_EXTERNAL_STORAGE",com.sanjay.ezyscreenrecorder.Function,true,<com.sanjay.ezyscreenrecorder.Function: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,false
Screen-Recorder.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.sanjay.ezyscreenrecorder.Function,true,<com.sanjay.ezyscreenrecorder.Function: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,falseScreenRecordTile.apk,"android.permission.WRITE_EXTERNAL_STORAGE",soup.tile.screenrecord.ScreenRecordActivity,true,<soup.tile.screenrecord.ScreenRecordActivity: boolean a(soup.tile.screenrecord.ScreenRecordActivity,android.content.Context,java.lang.String[])>,true,<soup.tile.screenrecord.ScreenRecordActivity: void onCreate(android.os.Bundle)>,false,null,true
ScreenRecordTile.apk,"android.permission.RECORD_AUDIO",soup.tile.screenrecord.ScreenRecordActivity,true,<soup.tile.screenrecord.ScreenRecordActivity: boolean a(soup.tile.screenrecord.ScreenRecordActivity,android.content.Context,java.lang.String[])>,true,<soup.tile.screenrecord.ScreenRecordActivity: void onCreate(android.os.Bundle)>,false,null,trueScreenshot-Sharer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.tomer.screenshotsharer.MainActivity,false,null,true,<com.tomer.screenshotsharer.MainActivity: boolean onTouch(android.view.View,android.view.MotionEvent)>,false,null,falsescummvm.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.scummvm.scummvm.SplashActivity,true,<org.scummvm.scummvm.SplashActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
scummvm.apk,"android.permission.READ_EXTERNAL_STORAGE",org.scummvm.scummvm.ScummVMActivity,true,<org.scummvm.scummvm.ScummVMActivity$MyScummVM: java.lang.String[] getAllStorageLocationsNoPermissionRequest()>,false,null,false,null,false
scummvm.apk,"android.permission.READ_EXTERNAL_STORAGE",org.scummvm.scummvm.SplashActivity,true,<org.scummvm.scummvm.SplashActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
scummvm.apk,"android.permission.READ_EXTERNAL_STORAGE",org.scummvm.scummvm.Version,true,<org.scummvm.scummvm.ScummVMActivity$MyScummVM: java.lang.String[] getAllStorageLocationsNoPermissionRequest()>,false,null,false,null,falseseadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.data.SeafRepo,false,null,true,<com.seafile.seadroid2.ui.activity.BrowserActivity$5: void onClick(android.view.View)>,false,null,false
seadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.ui.activity.BrowserActivity,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true
seadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.ui.activity.BaseActivity,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true
seadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.util.Utils,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true
seadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.account.AccountManager,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true
seadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.data.DataManager,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true,<com.seafile.seadroid2.ui.activity.BrowserActivity: void requestReadExternalStoragePermission()>,true
seadroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.seafile.seadroid2.gesturelock.DefaultAppLock,false,null,true,<com.seafile.seadroid2.ui.activity.BrowserActivity$5: void onClick(android.view.View)>,false,null,falsesealnote.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.twistedplane.sealnote.BackupActivity,true,<com.twistedplane.sealnote.BackupActivity: void doBackup(android.view.View)>,true,<com.twistedplane.sealnote.BackupActivity: void doBackup(android.view.View)>,true,<com.twistedplane.sealnote.BackupActivity: void doBackup(android.view.View)>,truesecure-quick-reliable-login.apk,"android.permission.CAMERA",org.ea.sqrl.activites.-$$Lambda$StartActivity,true,<org.ea.sqrl.activites.base.BaseActivity: void showPhoneStatePermission()>,true,<org.ea.sqrl.activites.base.BaseActivity: void requestPermission()>,true,<org.ea.sqrl.activites.base.BaseActivity: void showPhoneStatePermission()>,true
secure-quick-reliable-login.apk,"android.permission.CAMERA",org.ea.sqrl.activites.StartActivity,false,null,true,<org.ea.sqrl.activites.base.BaseActivity: void requestPermission()>,false,null,false
secure-quick-reliable-login.apk,"android.permission.CAMERA",org.ea.sqrl.activites.create.-$$Lambda$EntropyGatherActivity,false,null,true,<org.ea.sqrl.activites.create.EntropyGatherActivity: void requestPermission()>,false,null,false
secure-quick-reliable-login.apk,"android.permission.CAMERA",org.ea.sqrl.activites.base.CommonBaseActivity,true,<org.ea.sqrl.activites.create.EntropyGatherActivity: void showPhoneStatePermission()>,false,null,true,<org.ea.sqrl.activites.create.EntropyGatherActivity: void showPhoneStatePermission()>,false
secure-quick-reliable-login.apk,"android.permission.CAMERA",org.ea.sqrl.activites.base.BaseActivity,true,<org.ea.sqrl.activites.base.BaseActivity: void showPhoneStatePermission()>,true,<org.ea.sqrl.activites.base.BaseActivity: void requestPermission()>,true,<org.ea.sqrl.activites.base.BaseActivity: void showPhoneStatePermission()>,true
secure-quick-reliable-login.apk,"android.permission.CAMERA",org.ea.sqrl.activites.create.EntropyGatherActivity,true,<org.ea.sqrl.activites.create.EntropyGatherActivity: void showPhoneStatePermission()>,true,<org.ea.sqrl.activites.create.EntropyGatherActivity: void requestPermission()>,true,<org.ea.sqrl.activites.create.EntropyGatherActivity: void showPhoneStatePermission()>,trueSeek.apk,"android.permission.WRITE_EXTERNAL_STORAGE",de.aaronoe.seek.util.DisplayUtils,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,false,null,true
Seek.apk,"android.permission.WRITE_EXTERNAL_STORAGE",de.aaronoe.seek.ui.photodetail.DetailPresenterImpl,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,false,null,true
Seek.apk,"android.permission.WRITE_EXTERNAL_STORAGE",de.aaronoe.seek.util.PhotoDownloadUtils,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,false,null,true
Seek.apk,"android.permission.WRITE_EXTERNAL_STORAGE",de.aaronoe.seek.ui.photodetail.PhotoDetailActivity,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,true,<de.aaronoe.seek.util.DisplayUtils: boolean isStoragePermissionGranted(android.app.Activity)>,false,null,truesemitone.apk,"android.permission.RECORD_AUDIO",mn.tck.semitone.MainActivity,true,<mn.tck.semitone.RecordEngine: void create(android.app.Activity)>,false,null,false,null,false
semitone.apk,"android.permission.RECORD_AUDIO",mn.tck.semitone.PianoEngine,true,<mn.tck.semitone.RecordEngine: void create(android.app.Activity)>,false,null,false,null,falseSenPaper.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.jarvis.scibots.SenPaper.MainActivity,true,<com.jarvis.scibots.SenPaper.MainActivity: boolean isStoragePermissionGranted()>,true,<com.jarvis.scibots.SenPaper.MainActivity: boolean isStoragePermissionGranted()>,false,null,truesexytopo.apk,"android.permission.ACCESS_COARSE_LOCATION",org.hwyl.sexytopo.SexyTopo,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,false,null,true
sexytopo.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.hwyl.sexytopo.control.activity.SexyTopoActivity,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,false,null,true
sexytopo.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.hwyl.sexytopo.SexyTopo,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,false,null,true
sexytopo.apk,"android.permission.ACCESS_COARSE_LOCATION",org.hwyl.sexytopo.control.activity.SexyTopoActivity,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,true,<org.hwyl.sexytopo.control.activity.SexyTopoActivity: void requestPermissionsIfRequired()>,false,null,true
sexytopo.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.hwyl.sexytopo.control.io.Util,true,<org.hwyl.sexytopo.control.io.Util: boolean doWeHavePermissionToWriteToExternalStorage(android.content.Context)>,false,null,false,null,falseSharemusix.apk,"android.permission.ACCESS_COARSE_LOCATION",arunapps.com.sharemusix.WelcomePage$onCreate,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.WRITE_EXTERNAL_STORAGE",arunapps.com.sharemusix.WelcomePage,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.ACCESS_NETWORK_STATE",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,false,null,false
Sharemusix.apk,"android.permission.READ_PHONE_STATE",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,true
Sharemusix.apk,"android.permission.WRITE_EXTERNAL_STORAGE",arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.WRITE_EXTERNAL_STORAGE",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,true
Sharemusix.apk,"android.permission.CHANGE_NETWORK_STATE",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,false,null,false
Sharemusix.apk,"android.permission.WRITE_EXTERNAL_STORAGE",arunapps.com.sharemusix.WelcomePage$onCreate,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.READ_PHONE_STATE",arunapps.com.sharemusix.WelcomePage,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.READ_PHONE_STATE",arunapps.com.sharemusix.WelcomePage$onCreate,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.ACCESS_COARSE_LOCATION",arunapps.com.sharemusix.WelcomePage,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.CHANGE_WIFI_STATE",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,false,null,false
Sharemusix.apk,"android.permission.READ_PHONE_STATE",arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.ACCESS_COARSE_LOCATION",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,true
Sharemusix.apk,"android.permission.INTERNET",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,false,null,false
Sharemusix.apk,"android.permission.ACCESS_COARSE_LOCATION",arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener,false,null,true,<arunapps.com.sharemusix.WelcomePage$viewPagerPageChangeListener$1: void onPageSelected(int)>,false,null,false
Sharemusix.apk,"android.permission.ACCESS_WIFI_STATE",arunapps.com.sharemusix.StartUpPage,true,<arunapps.com.sharemusix.StartUpPage: void onCreate(android.os.Bundle)>,false,null,false,null,falseShelter.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.typeblog.shelter.ui.DummyActivity,true,<net.typeblog.shelter.ui.DummyActivity: void onCreate(android.os.Bundle)>,true,<net.typeblog.shelter.ui.DummyActivity: void onCreate(android.os.Bundle)>,false,null,trueShowMeHills.apk,"android.permission.ACCESS_COARSE_LOCATION",com.showmehills.Splashscreen,false,null,true,<com.showmehills.Splashscreen$1: void onClick(android.content.DialogInterface,int)>,false,null,false
ShowMeHills.apk,"android.permission.ACCESS_FINE_LOCATION",com.showmehills.Splashscreen,false,null,true,<com.showmehills.Splashscreen$1: void onClick(android.content.DialogInterface,int)>,false,null,false
ShowMeHills.apk,"android.permission.CAMERA",com.showmehills.Splashscreen,true,<com.showmehills.Splashscreen: void checkPermissions()>,true,<com.showmehills.Splashscreen$1: void onClick(android.content.DialogInterface,int)>,false,null,trueSia-Android.apk,"android.permission.CAMERA",com.vandyke.sia.ui.wallet.view.ScannerActivity,true,<com.vandyke.sia.ui.wallet.view.ScannerActivity: void onCreate(android.os.Bundle)>,true,<com.vandyke.sia.ui.wallet.view.ScannerActivity: void onCreate(android.os.Bundle)>,false,null,trueSIB.Android.apk,"android.permission.READ_EXTERNAL_STORAGE",ru.nettrash.sibliteandroid.SettingsActivity,false,null,true,<ru.nettrash.sibliteandroid.SettingsActivity$6: void onClick(android.view.View)>,false,null,false
SIB.Android.apk,"android.permission.READ_EXTERNAL_STORAGE",ru.nettrash.sibliteandroid.BaseActivity,false,null,true,<ru.nettrash.sibliteandroid.SettingsActivity$6: void onClick(android.view.View)>,false,null,false
SIB.Android.apk,"android.permission.CAMERA",ru.nettrash.sibliteandroid.BaseActivity,false,null,true,<ru.nettrash.sibliteandroid.SendActivity$8: void onClick(android.view.View)>,false,null,false
SIB.Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",ru.nettrash.sibliteandroid.SettingsActivity,false,null,true,<ru.nettrash.sibliteandroid.SettingsActivity$6: void onClick(android.view.View)>,false,null,false
SIB.Android.apk,"android.permission.CAMERA",ru.nettrash.sibliteandroid.SendActivity,false,null,true,<ru.nettrash.sibliteandroid.SendActivity$8: void onClick(android.view.View)>,false,null,false
SIB.Android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",ru.nettrash.sibliteandroid.BaseActivity,false,null,true,<ru.nettrash.sibliteandroid.SettingsActivity$6: void onClick(android.view.View)>,false,null,falseSiliCompressor.apk,"android.permission.ACCESS_NETWORK_STATE",com.iceteck.silicompressor.Login,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,false,null,false,null,false
SiliCompressor.apk,"android.permission.READ_PHONE_STATE",com.iceteck.silicompressor.Login,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,false,null,true
SiliCompressor.apk,"android.permission.READ_EXTERNAL_STORAGE",com.iceteck.silicompressor.Login,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,false,null,true
SiliCompressor.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.iceteck.silicompressor.Login,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,false,null,true
SiliCompressor.apk,"android.permission.CAMERA",com.iceteck.silicompressor.Login,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,true,<com.iceteck.silicompressor.Login: boolean checkAndRequestPermissions()>,false,null,truesimpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.remote.FileStore,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.AlarmReceiver,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.remote.LoginScreen$onCreate,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.task.TodoList,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.util.Config,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.task.TodoList$reload,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.ThemedNoActionBarActivity,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.util.Util,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_CALENDAR",nl.mpcjanssen.simpletask.Preferences,true,<nl.mpcjanssen.simpletask.Preferences: void requestCalendarPermission()>,true,<nl.mpcjanssen.simpletask.Preferences: void requestCalendarPermission()>,false,null,true
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.util.ActionQueue,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.READ_CALENDAR",nl.mpcjanssen.simpletask.Preferences,true,<nl.mpcjanssen.simpletask.Preferences: void requestCalendarPermission()>,true,<nl.mpcjanssen.simpletask.Preferences: void requestCalendarPermission()>,false,null,true
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.remote.LoginScreen,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,true,<nl.mpcjanssen.simpletask.remote.LoginScreen: void startLogin$app_cloudlessRelease()>,false,null,true
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.TodoApplication,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.Simpletask,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.util.FileStoreActionQueue,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,false
simpletask-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",nl.mpcjanssen.simpletask.AddTask,true,<nl.mpcjanssen.simpletask.remote.FileStore: boolean isAuthenticated()>,false,null,false,null,falsesiteswap_generator.apk,"android.permission.READ_EXTERNAL_STORAGE",namlit.siteswapgenerator.MainActivity,true,<namlit.siteswapgenerator.MainActivity: void importAppDatabase()>,true,<namlit.siteswapgenerator.MainActivity: void importAppDatabase()>,false,null,true
siteswap_generator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",namlit.siteswapgenerator.MainActivity,true,<namlit.siteswapgenerator.MainActivity: void exportAppDatabase()>,true,<namlit.siteswapgenerator.MainActivity: void exportAppDatabase()>,false,null,truesls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.AbstractPlayStatusReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.AndroidMusicReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.MIUIMusicReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.PermissionsActivity,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,true,<com.adam.aslfms.PermissionsActivity: void lambda$checkCurrrentPermissions$0$PermissionsActivity(android.view.View)>,false,null,true
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.SEMCMusicReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.SEMCMusicReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.OptionsActivity,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.util.Track,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.-$$Lambda$PermissionsActivity,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.BuiltInMusicAppReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.util.Util,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.MusicAPI,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.util.Util,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.BuiltInMusicAppReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.PermissionsActivity,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.AbstractPlayStatusReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.MIUIMusicReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.OptionsActivity,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.util.Track,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.-$$Lambda$PermissionsActivity,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.READ_EXTERNAL_STORAGE",com.adam.aslfms.receiver.AndroidMusicReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.MusicAPI,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,false
sls.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver,true,<com.adam.aslfms.util.Util: boolean checkExternalPermission(android.content.Context)>,false,null,false,null,falseSmartCitizen.apk,"android.permission.ACCESS_FINE_LOCATION",es.us.hermes.smartcitizen.utils.Utils,true,<es.us.hermes.smartcitizen.utils.Utils: boolean areMandatoryAppPermissionsGranted(android.content.Context)>,false,null,false,null,false
SmartCitizen.apk,"android.permission.ACCESS_FINE_LOCATION",es.us.hermes.smartcitizen.service.SyncService,true,<es.us.hermes.smartcitizen.utils.Utils: boolean areMandatoryAppPermissionsGranted(android.content.Context)>,false,null,false,null,false
SmartCitizen.apk,"android.permission.BODY_SENSORS",es.us.hermes.smartcitizen.data.GoogleFitHelper,true,<es.us.hermes.smartcitizen.utils.Utils: boolean areMandatoryAppPermissionsGranted(android.content.Context)>,false,null,false,null,false
SmartCitizen.apk,"android.permission.BODY_SENSORS",es.us.hermes.smartcitizen.service.SyncService,true,<es.us.hermes.smartcitizen.utils.Utils: boolean areMandatoryAppPermissionsGranted(android.content.Context)>,false,null,false,null,false
SmartCitizen.apk,"android.permission.BODY_SENSORS",es.us.hermes.smartcitizen.utils.Utils,true,<es.us.hermes.smartcitizen.utils.Utils: boolean areMandatoryAppPermissionsGranted(android.content.Context)>,false,null,false,null,false
SmartCitizen.apk,"android.permission.ACCESS_FINE_LOCATION",es.us.hermes.smartcitizen.data.GoogleFitHelper,true,<es.us.hermes.smartcitizen.utils.Utils: boolean areMandatoryAppPermissionsGranted(android.content.Context)>,false,null,false,null,falsesmartnavi.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ilm.sandwich.Settings,true,<com.ilm.sandwich.Settings: void checkWriteStoragePermission(boolean)>,true,<com.ilm.sandwich.Settings: void checkWriteStoragePermission(boolean)>,false,null,true
smartnavi.apk,"android.permission.ACCESS_FINE_LOCATION",com.ilm.sandwich.GoogleMap,true,<com.ilm.sandwich.GoogleMap: void onCreate(android.os.Bundle)>,true,<com.ilm.sandwich.GoogleMap: void onCreate(android.os.Bundle)>,false,null,true
smartnavi.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ilm.sandwich.GoogleMap,true,<com.ilm.sandwich.Settings: void checkWriteStoragePermission(boolean)>,true,<com.ilm.sandwich.Settings: void checkWriteStoragePermission(boolean)>,false,null,trueSmartphoneRadar.apk,"android.permission.ACCESS_FINE_LOCATION",com.cauliflower.danielt.smartphoneradar.tool.RequestPermission,true,<com.cauliflower.danielt.smartphoneradar.tool.RequestPermission: void accessFineLocation(android.app.Activity,int)>,true,<com.cauliflower.danielt.smartphoneradar.tool.RequestPermission: void accessFineLocation(android.app.Activity,int)>,false,null,true
SmartphoneRadar.apk,"android.permission.READ_PHONE_STATE",com.cauliflower.danielt.smartphoneradar.ui.AccountActivity,true,<com.cauliflower.danielt.smartphoneradar.ui.AccountActivity: void getPhoneInfo()>,true,<com.cauliflower.danielt.smartphoneradar.ui.AccountActivity: void getPhoneInfo()>,false,null,true
SmartphoneRadar.apk,"android.permission.READ_PHONE_STATE",com.cauliflower.danielt.smartphoneradar.service.RadarService,true,<com.cauliflower.danielt.smartphoneradar.service.RadarService: void getUserIdentity()>,false,null,false,null,falsesms-backup-plus.apk,"android.permission.GET_ACCOUNTS",com.zegoggles.smssync.activity.ThemeActivity,true,<com.zegoggles.smssync.activity.auth.AccountManagerAuthActivity: boolean needsGetAccountPermission()>,true,<com.zegoggles.smssync.activity.auth.AccountManagerAuthActivity: void requestGetAccountsPermission()>,false,null,true
sms-backup-plus.apk,"android.permission.GET_ACCOUNTS",com.zegoggles.smssync.activity.auth.AccountManagerAuthActivity,true,<com.zegoggles.smssync.activity.auth.AccountManagerAuthActivity: boolean needsGetAccountPermission()>,true,<com.zegoggles.smssync.activity.auth.AccountManagerAuthActivity: void requestGetAccountsPermission()>,false,null,truesmsdroid.apk,"android.permission.READ_SMS",de.ub0r.android.smsdroid.ConversationListActivity,false,null,false,null,true,<de.ub0r.android.smsdroid.SMSdroid: boolean requestPermission(android.app.Activity,java.lang.String,int,int,android.content.DialogInterface$OnClickListener)>,false
smsdroid.apk,"android.permission.READ_SMS",de.ub0r.android.smsdroid.SMSdroid,true,<de.ub0r.android.smsdroid.SMSdroid: boolean hasPermission(android.content.Context,java.lang.String)>,false,null,true,<de.ub0r.android.smsdroid.SMSdroid: boolean requestPermission(android.app.Activity,java.lang.String,int,int,android.content.DialogInterface$OnClickListener)>,false
smsdroid.apk,"android.permission.READ_SMS",de.ub0r.android.smsdroid.SenderActivity,true,<de.ub0r.android.smsdroid.SMSdroid: boolean hasPermission(android.content.Context,java.lang.String)>,false,null,false,null,false
smsdroid.apk,"android.permission.READ_CONTACTS",de.ub0r.android.smsdroid.ConversationAdapter,false,null,false,null,true,<de.ub0r.android.smsdroid.SMSdroid: boolean requestPermission(android.app.Activity,java.lang.String,int,int,android.content.DialogInterface$OnClickListener)>,false
smsdroid.apk,"android.permission.READ_CONTACTS",de.ub0r.android.smsdroid.SMSdroid,false,null,false,null,true,<de.ub0r.android.smsdroid.SMSdroid: boolean requestPermission(android.app.Activity,java.lang.String,int,int,android.content.DialogInterface$OnClickListener)>,false
smsdroid.apk,"android.permission.READ_SMS",de.ub0r.android.smsdroid.ConversationAdapter,false,null,false,null,true,<de.ub0r.android.smsdroid.SMSdroid: boolean requestPermission(android.app.Activity,java.lang.String,int,int,android.content.DialogInterface$OnClickListener)>,false
smsdroid.apk,"android.permission.READ_CONTACTS",de.ub0r.android.smsdroid.ConversationListActivity,false,null,false,null,true,<de.ub0r.android.smsdroid.SMSdroid: boolean requestPermission(android.app.Activity,java.lang.String,int,int,android.content.DialogInterface$OnClickListener)>,falseSnake-That-MO.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.muss_and_toeberg.snake_that.AndroidLauncher,true,<com.muss_and_toeberg.snake_that.AndroidLauncher: boolean checkWritePermission()>,true,<com.muss_and_toeberg.snake_that.AndroidLauncher: void askForWritePermission()>,false,null,true
Snake-That-MO.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.muss_and_toeberg.snake_that.technical.MainGame,true,<com.muss_and_toeberg.snake_that.AndroidLauncher: boolean checkWritePermission()>,true,<com.muss_and_toeberg.snake_that.AndroidLauncher: void askForWritePermission()>,false,null,truesnap-event.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.arjunkrishnababu96.snapevent.MainActivity,true,<io.github.arjunkrishnababu96.snapevent.MainActivity$1: void onClick(android.view.View)>,true,<io.github.arjunkrishnababu96.snapevent.MainActivity$1: void onClick(android.view.View)>,false,null,trueSNAP-WIFI.apk,"android.permission.INTERNET",com.Dev.unknown.snapwifi.Cam,true,<com.abbyy.mobile.rtr.RecognitionService: void start(int,int,int,android.graphics.Rect)>,false,null,false,null,falseson_of_hunkypunk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.andglkmod.hunkypunk.GamesList,true,<org.andglkmod.hunkypunk.GamesList: void onCreate(android.os.Bundle)>,true,<org.andglkmod.hunkypunk.GamesList: void onCreate(android.os.Bundle)>,false,null,truesoundboard.apk,"android.permission.READ_EXTERNAL_STORAGE",sh.lrk.soundboard.MainActivity,true,<sh.lrk.soundboard.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
soundboard.apk,"android.permission.READ_EXTERNAL_STORAGE",sh.lrk.soundboard.-$$Lambda$MainActivity,true,<sh.lrk.soundboard.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
soundboard.apk,"android.permission.WRITE_EXTERNAL_STORAGE",sh.lrk.soundboard.MainActivity,true,<sh.lrk.soundboard.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
soundboard.apk,"android.permission.WRITE_EXTERNAL_STORAGE",sh.lrk.soundboard.-$$Lambda$MainActivity,true,<sh.lrk.soundboard.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,falseSparkleMe.apk,"android.permission.ACCESS_FINE_LOCATION",com.queatz.sparkleme.MainActivity,true,<com.queatz.sparkleme.MainActivity: void enable()>,true,<com.queatz.sparkleme.MainActivity: void enable()>,false,null,trueSpectrix.apk,"android.permission.RECORD_AUDIO",com.samuelberrien.spectrix.MainActivity,true,<com.samuelberrien.spectrix.MainActivity: void requestRecordPermission()>,true,<com.samuelberrien.spectrix.MainActivity: void requestRecordPermission()>,true,<com.samuelberrien.spectrix.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,true
Spectrix.apk,"android.permission.RECORD_AUDIO",com.samuelberrien.spectrix.-$$Lambda$MainActivity,true,<com.samuelberrien.spectrix.MainActivity: void requestRecordPermission()>,true,<com.samuelberrien.spectrix.MainActivity: void requestRecordPermission()>,false,null,true
Spectrix.apk,"android.permission.RECORD_AUDIO",com.samuelberrien.spectrix.ui.main.ExpandCollapseView,true,<com.samuelberrien.spectrix.MainActivity: void requestRecordPermission()>,true,<com.samuelberrien.spectrix.MainActivity: void requestRecordPermission()>,false,null,trueSpeech2Text.apk,"android.permission.INTERNET",com.grobocop.speech2text.ui.MainActivity$onCreate$$inlined$AppBarConfiguration,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,false,null,false,null,false
Speech2Text.apk,"android.permission.INTERNET",com.grobocop.speech2text.ui.MainActivity$inlined$sam$i$androidx_navigation_ui_AppBarConfiguration_OnNavigateUpListener,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,false,null,false,null,false
Speech2Text.apk,"android.permission.MODIFY_AUDIO_SETTINGS",com.grobocop.speech2text.utils.PermissionsManager,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,false,null,false,null,false
Speech2Text.apk,"android.permission.RECORD_AUDIO",com.grobocop.speech2text.ui.MainActivity$onCreate$$inlined$AppBarConfiguration,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,true,<com.grobocop.speech2text.utils.PermissionsManager: void requestPermissions(android.app.Activity)>,false,null,true
Speech2Text.apk,"android.permission.RECORD_AUDIO",com.grobocop.speech2text.ui.MainActivity$inlined$sam$i$androidx_navigation_ui_AppBarConfiguration_OnNavigateUpListener,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,true,<com.grobocop.speech2text.utils.PermissionsManager: void requestPermissions(android.app.Activity)>,false,null,true
Speech2Text.apk,"android.permission.INTERNET",com.grobocop.speech2text.utils.PermissionsManager,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,false,null,false,null,false
Speech2Text.apk,"android.permission.MODIFY_AUDIO_SETTINGS",com.grobocop.speech2text.ui.MainActivity$inlined$sam$i$androidx_navigation_ui_AppBarConfiguration_OnNavigateUpListener,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,false,null,false,null,false
Speech2Text.apk,"android.permission.RECORD_AUDIO",com.grobocop.speech2text.utils.PermissionsManager,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,true,<com.grobocop.speech2text.utils.PermissionsManager: void requestPermissions(android.app.Activity)>,false,null,true
Speech2Text.apk,"android.permission.MODIFY_AUDIO_SETTINGS",com.grobocop.speech2text.ui.MainActivity$onCreate$$inlined$AppBarConfiguration,true,<com.grobocop.speech2text.utils.PermissionsManager: boolean checkPermissions(android.app.Activity)>,false,null,false,null,falseSQLite2XL.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ajts.androidmads.sqlite2xlDemo.MainActivity,true,<com.ajts.androidmads.sqlite2xlDemo.MainActivity$1: void onClick(android.view.View)>,true,<com.ajts.androidmads.sqlite2xlDemo.MainActivity$1: void onClick(android.view.View)>,false,null,trueSSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.utils.FirebaseUtils$loadProfileThumbnail,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.ForwardActivity,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.utils.FirebaseUtils,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,true
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity$inlined$sam$i$android_view_View_OnClickListener,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity$onRequestPermissionsResult$1: void invoke(android.view.View)>,false,null,true
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.ForwardActivity,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,true
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.utils.FirebaseUtils$loadProfileThumbnail,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.HomeActivity$inlined$sam$i$android_view_View_OnClickListener,false,null,true,<com.aziz.sstalk.HomeActivity$onRequestPermissionsResult$1: void invoke(android.view.View)>,false,null,false
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.models.Models,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.utils.FirebaseUtils,true,<com.aziz.sstalk.utils.utils: boolean hasContactPermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,true
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.utils.utils,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity$onRequestPermissionsResult,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity$onRequestPermissionsResult$1: void invoke(android.view.View)>,false,null,true
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity$onRequestPermissionsResult,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity$onRequestPermissionsResult$1: void invoke(android.view.View)>,false,null,true
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,true
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.HomeActivity,true,<com.aziz.sstalk.utils.utils: boolean hasContactPermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,true
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.MultiContactChooserActivity,true,<com.aziz.sstalk.MultiContactChooserActivity: void onCreate(android.os.Bundle)>,true,<com.aziz.sstalk.MultiContactChooserActivity: void onCreate(android.os.Bundle)>,false,null,true
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.HomeActivity$onCreate,false,null,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,false
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.utils.ActivityUtilsKt$loadAvailableUsers,true,<com.aziz.sstalk.utils.utils: boolean hasContactPermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity$onCreate,false,null,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,false
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.utils.utils,true,<com.aziz.sstalk.utils.utils: boolean hasContactPermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.models.Models,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.HomeActivity$onRequestPermissionsResult,false,null,true,<com.aziz.sstalk.HomeActivity$onRequestPermissionsResult$1: void invoke(android.view.View)>,false,null,false
SSTalk.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity$inlined$sam$i$android_view_View_OnClickListener,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity$onRequestPermissionsResult$1: void invoke(android.view.View)>,false,null,true
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.HomeActivity$onCreate,false,null,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,false
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.utils.FirebaseUtils,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,true,<com.aziz.sstalk.HomeActivity: void initComponents()>,false,null,true
SSTalk.apk,"android.permission.READ_EXTERNAL_STORAGE",com.aziz.sstalk.utils.utils,true,<com.aziz.sstalk.utils.utils: boolean hasStoragePermission(android.content.Context)>,false,null,false,null,false
SSTalk.apk,"android.permission.READ_CONTACTS",com.aziz.sstalk.ContactsActivity,true,<com.aziz.sstalk.ContactsActivity: void onCreate(android.os.Bundle)>,true,<com.aziz.sstalk.ContactsActivity: void onCreate(android.os.Bundle)>,false,null,trueStatusGizi.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.fbasegizi.statusgizi.fragment.settings.UbahProfil,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.fbasegizi.statusgizi.fragment.settings.UbahProfil: void openPicture()>,false,null,true
StatusGizi.apk,"android.permission.CAMERA",com.fbasegizi.statusgizi.fragment.settings.UbahProfil,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.fbasegizi.statusgizi.fragment.settings.UbahProfil: void openPicture()>,false,null,true
StatusGizi.apk,"android.permission.CAMERA",com.fbasegizi.statusgizi.BaseActivity,false,null,true,<com.fbasegizi.statusgizi.fragment.settings.UbahProfil: void openPicture()>,false,null,false
StatusGizi.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.fbasegizi.statusgizi.BaseActivity,false,null,true,<com.fbasegizi.statusgizi.fragment.settings.UbahProfil: void openPicture()>,false,null,falsestopmotion.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.sthagios.stopmotion.settings.SettingsActivity,false,null,false,null,true,<com.sthagios.stopmotion.settings.SettingsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
stopmotion.apk,"android.permission.CAMERA",com.sthagios.stopmotion.MainActivity,false,null,false,null,true,<com.sthagios.stopmotion.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
stopmotion.apk,"android.permission.CAMERA",com.sthagios.stopmotion.list.a,false,null,false,null,true,<com.sthagios.stopmotion.list.ImageListActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false
stopmotion.apk,"android.permission.CAMERA",com.sthagios.stopmotion.list.ImageListActivity,false,null,false,null,true,<com.sthagios.stopmotion.list.ImageListActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,falsestorywell_android.apk,"android.permission.ACCESS_FINE_LOCATION",edu.neu.ccs.wellness.storytelling.firstrun.FirstRunActivity,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_FINE_LOCATION",edu.neu.ccs.wellness.storytelling.settings.DiscoverTrackersActivity,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_COARSE_LOCATION",edu.neu.ccs.wellness.storytelling.firstrun.FirstRunActivity,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_COARSE_LOCATION",edu.neu.ccs.wellness.storytelling.SplashScreenActivity,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_FINE_LOCATION",edu.neu.ccs.wellness.storytelling.SplashScreenActivity,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.RECORD_AUDIO",edu.neu.ccs.wellness.storytelling.firstrun.AskAudioRecordingPermissionsFragment,true,<edu.neu.ccs.wellness.storytelling.firstrun.AskAudioRecordingPermissionsFragment: boolean isRecordingAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.RECORD_AUDIO",edu.neu.ccs.wellness.storytelling.firstrun.FirstRunActivity,true,<edu.neu.ccs.wellness.storytelling.firstrun.AskAudioRecordingPermissionsFragment: boolean isRecordingAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_FINE_LOCATION",edu.neu.ccs.wellness.storytelling.firstrun.AskAudioRecordingPermissionsFragment,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_COARSE_LOCATION",edu.neu.ccs.wellness.storytelling.settings.DiscoverTrackersActivity,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,false
storywell_android.apk,"android.permission.ACCESS_COARSE_LOCATION",edu.neu.ccs.wellness.storytelling.firstrun.AskAudioRecordingPermissionsFragment,true,<edu.neu.ccs.wellness.utils.WellnessBluetooth: boolean isLocationPermissionAllowed(android.content.Context)>,false,null,false,null,falseStreetComplete.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.map.MainFragment,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,false,null,false,null,false
StreetComplete.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.location.LocationState,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,true,<de.westnordost.streetcomplete.location.LocationRequestFragment: void requestLocationPermissions()>,false,null,true
StreetComplete.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.location.LocationUtil,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,false,null,false,null,false
StreetComplete.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.MainActivity,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,true,<de.westnordost.streetcomplete.location.LocationRequestFragment: void requestLocationPermissions()>,false,null,true
StreetComplete.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.location.LocationRequestFragment,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,true,<de.westnordost.streetcomplete.location.LocationRequestFragment: void requestLocationPermissions()>,false,null,trueStrings.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mediaplayer.strings.activities.SplashScreenActivity,true,<com.mediaplayer.strings.activities.SplashScreenActivity: boolean hasPermissions()>,false,null,false,null,falseStudentCardForSoojung.apk,"android.permission.READ_EXTERNAL_STORAGE",zion830.naver.blog.studentcardforsoojung.MainActivity,false,null,true,<zion830.naver.blog.studentcardforsoojung.MainActivity: void askForPermission()>,false,null,falseSunWidget.apk,"android.permission.WRITE_EXTERNAL_STORAGE",xyz.koleno.sunwidget.main.MainActivity$onCreate,true,<xyz.koleno.sunwidget.main.MainActivity: boolean checkWritePermission()>,false,null,false,null,false
SunWidget.apk,"android.permission.ACCESS_FINE_LOCATION",xyz.koleno.sunwidget.main.MainActivity$onCreate,true,<xyz.koleno.sunwidget.main.MainActivity: boolean checkLocationPermission()>,false,null,false,null,false
SunWidget.apk,"android.permission.ACCESS_FINE_LOCATION",xyz.koleno.sunwidget.main.MainActivity,true,<xyz.koleno.sunwidget.main.MainActivity: boolean checkLocationPermission()>,false,null,false,null,false
SunWidget.apk,"android.permission.WRITE_EXTERNAL_STORAGE",xyz.koleno.sunwidget.main.MainActivity,true,<xyz.koleno.sunwidget.main.MainActivity: boolean checkWritePermission()>,false,null,false,null,falsesyncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.services.PermissionManager,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.orgdata.OrgFile,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.synchronizers.AuthData,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.synchronizers.Synchronizer,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.directory_chooser.FolderPickerActivity,true,<com.coste.syncorg.directory_chooser.FolderPickerActivity: void onCreate(android.os.Bundle)>,true,<com.coste.syncorg.directory_chooser.FolderPickerActivity: void onCreate(android.os.Bundle)>,false,null,true
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.services.PermissionManagerActivity,false,null,true,<com.coste.syncorg.services.PermissionManagerActivity: void onCreate(android.os.Bundle)>,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.services.SyncService,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.synchronizers.JGitWrapper,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.synchronizers.NullSynchronizer,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,false
syncorg.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.coste.syncorg.synchronizers.SyncResult,true,<com.coste.syncorg.services.PermissionManager: boolean permissionGranted(android.content.Context)>,false,null,false,null,falsesyncplayer.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.powerinside.syncplay.videoPlayer,false,null,false,null,true,<androidx.core.app.a: boolean j(android.app.Activity,java.lang.String)>,falsesyncthing-android-fdroid.apk,"android.permission.CAMERA",com.nutomic.syncthingandroid.activities.-$$Lambda$QRScannerActivity,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,false,null,true
syncthing-android-fdroid.apk,"android.permission.CAMERA",com.nutomic.syncthingandroid.activities.QRScannerActivity,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,false,null,true
syncthing-android-fdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.activities.StateDialogActivity,true,<com.nutomic.syncthingandroid.activities.MainActivity: void onResume()>,false,null,false,null,false
syncthing-android-fdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.DaggerDaggerComponent,true,<com.nutomic.syncthingandroid.activities.FirstStartActivity: boolean haveStoragePermission()>,false,null,false,null,false
syncthing-android-fdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.activities.MainActivity,true,<com.nutomic.syncthingandroid.activities.MainActivity: void onResume()>,false,null,false,null,false
syncthing-android-fdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.service.SyncthingService,true,<com.nutomic.syncthingandroid.service.SyncthingService: void onCreate()>,false,null,false,null,false
syncthing-android-fdroid.apk,"android.permission.CAMERA",com.nutomic.syncthingandroid.activities.ThemedAppCompatActivity,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,false,null,true
syncthing-android-fdroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.activities.FirstStartActivity,true,<com.nutomic.syncthingandroid.activities.FirstStartActivity: boolean haveStoragePermission()>,false,null,false,null,falsesyncthing-android.apk,"android.permission.CAMERA",com.nutomic.syncthingandroid.activities.-$$Lambda$QRScannerActivity,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,false,null,true
syncthing-android.apk,"android.permission.CAMERA",com.nutomic.syncthingandroid.activities.QRScannerActivity,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,false,null,true
syncthing-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.activities.StateDialogActivity,true,<com.nutomic.syncthingandroid.activities.MainActivity: void onResume()>,false,null,false,null,false
syncthing-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.service.SyncthingService,true,<com.nutomic.syncthingandroid.service.SyncthingService: void onCreate()>,false,null,false,null,false
syncthing-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.activities.MainActivity,true,<com.nutomic.syncthingandroid.activities.MainActivity: void onResume()>,false,null,false,null,false
syncthing-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.DaggerDaggerComponent,true,<com.nutomic.syncthingandroid.activities.FirstStartActivity: boolean haveStoragePermission()>,false,null,false,null,false
syncthing-android.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.nutomic.syncthingandroid.activities.FirstStartActivity,true,<com.nutomic.syncthingandroid.activities.FirstStartActivity: boolean haveStoragePermission()>,false,null,false,null,false
syncthing-android.apk,"android.permission.CAMERA",com.nutomic.syncthingandroid.activities.ThemedAppCompatActivity,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,true,<com.nutomic.syncthingandroid.activities.QRScannerActivity: void checkPermissionAndStartScanner()>,false,null,trueTaiwanEbookSearch.apk,"android.permission.CAMERA",liou.rayyuan.ebooksearchtaiwan.camerapreview.CameraPreviewActivity,false,null,true,<a0.d.a.q: void j()>,true,<y.i.d.c: boolean k(android.app.Activity,java.lang.String)>,falseTapad.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.bedrock.padder.helper.FabHelper,true,<com.bedrock.padder.activity.PresetStoreActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
Tapad.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.bedrock.padder.helper.ToolbarHelper,false,null,true,<com.bedrock.padder.activity.PresetStoreActivity: void setDirectory()>,false,null,false
Tapad.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.bedrock.padder.fragment.PresetStoreOnlineFragment,true,<com.bedrock.padder.activity.PresetStoreActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
Tapad.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.bedrock.padder.activity.PresetStoreActivity,true,<com.bedrock.padder.activity.PresetStoreActivity: void onCreate(android.os.Bundle)>,true,<com.bedrock.padder.activity.PresetStoreActivity: void setDirectory()>,false,null,true
Tapad.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.bedrock.padder.helper.WindowHelper,false,null,true,<com.bedrock.padder.activity.PresetStoreActivity: void setDirectory()>,false,null,falseTappic.apk,"android.permission.WRITE_EXTERNAL_STORAGE",es.dmoral.tappic.activities.DetailActivity,true,<es.dmoral.tappic.activities.DetailActivity: void downloadImage()>,true,<es.dmoral.tappic.activities.DetailActivity: void downloadImage()>,false,null,trueTelegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.ChatObject,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.voip.VoIPPendingCall,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.AndroidUtilities,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Telegram-FOSS.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.LocaleController,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.MessagesController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.MediaController,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.support.SparseLongArray,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.NotificationsController,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Telegram-FOSS.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.voip.VoIPService: int onStartCommand(android.content.Intent,int,int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.SendMessagesHelper,true,<org.telegram.messenger.MediaController: void lambda$loadGalleryPhotosAlbums$40(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.DispatchQueue,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.BuildVars,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Telegram-FOSS.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.ChatObject,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.ContactsLoadingObserver,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.BuildVars,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.AndroidUtilities,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Telegram-FOSS.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.MessagesController,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
Telegram-FOSS.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.SharedConfig,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocationController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.MediaController,true,<org.telegram.messenger.MediaController: void lambda$loadGalleryPhotosAlbums$40(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.FileLog,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Telegram-FOSS.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.MessagesController,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.BaseController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.NotificationsController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.LocaleController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.-$$Lambda$ContactsController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.MediaDataController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.SharedConfig,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Telegram-FOSS.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.MediaDataController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocaleController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Telegram-FOSS.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.XiaomiUtilities,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.FileLoadOperation,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.FileLog,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.LocaleController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPActionsReceiver,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocationSharingService,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.MessagesController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.XiaomiUtilities,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.ContactsController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.MessagesController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.AndroidUtilities,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Telegram-FOSS.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.LocaleController,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
Telegram-FOSS.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPActionsReceiver,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,falseTemanolga.apk,"android.permission.ACCESS_COARSE_LOCATION",com.wysiwyg.temanolga.ui.explore.SportVenueActivity,false,null,true,<com.wysiwyg.temanolga.ui.explore.SportVenueActivity: void getLocation()>,false,null,false
Temanolga.apk,"android.permission.ACCESS_FINE_LOCATION",com.wysiwyg.temanolga.ui.explore.SportVenueActivity,true,<com.wysiwyg.temanolga.ui.explore.SportVenueActivity: void getLocation()>,true,<com.wysiwyg.temanolga.ui.explore.SportVenueActivity: void getLocation()>,false,null,truetext-scanner.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.ltapps.textscanner.MainActivity,true,<com.ltapps.textscanner.MainActivity: void onCreate(android.os.Bundle)>,true,<com.ltapps.textscanner.MainActivity: void onCreate(android.os.Bundle)>,true,<com.ltapps.textscanner.MainActivity: void onCreate(android.os.Bundle)>,trueThe-Third-Eye.apk,"android.permission.CAMERA",org.tensorflow.lite.examples.classification.CameraActivity,true,<org.tensorflow.lite.examples.classification.CameraActivity: boolean hasPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,true
The-Third-Eye.apk,"android.permission.CAMERA",org.tensorflow.lite.examples.classification.env.Logger,true,<org.tensorflow.lite.examples.classification.CameraActivity: boolean hasPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,true,<org.tensorflow.lite.examples.classification.CameraActivity: void requestPermission()>,trueTheCashster.apk,"android.permission.ACCESS_FINE_LOCATION",org.splitbrain.thecashster.EntryActivity,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<org.splitbrain.thecashster.EntryActivity: void locationUpdate()>,false,null,true
TheCashster.apk,"android.permission.GET_ACCOUNTS",org.splitbrain.thecashster.Tasks.SheetsTask,false,null,true,<org.splitbrain.thecashster.EntryActivity: void chooseAccount()>,false,null,false
TheCashster.apk,"android.permission.GET_ACCOUNTS",org.splitbrain.thecashster.EntryActivity,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<org.splitbrain.thecashster.EntryActivity: void chooseAccount()>,false,null,trueThermal-Printer-in-Android.apk,"android.permission.ACCESS_COARSE_LOCATION",infixsoft.imrankst1221.printer.DeviceList,true,<infixsoft.imrankst1221.printer.DeviceList: void onCreate(android.os.Bundle)>,true,<infixsoft.imrankst1221.printer.DeviceList: void onCreate(android.os.Bundle)>,false,null,trueThomso_17.apk,"android.permission.ACCESS_FINE_LOCATION",com.project.nikhil.thomso17.MapsActivity,true,<com.project.nikhil.thomso17.MapsActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,falseTimeMachine.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.samdelong.timemachine.MainActivity$5$2,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.RECORD_AUDIO",com.samdelong.timemachine.MainActivity$3,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3$1: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.RECORD_AUDIO",com.samdelong.timemachine.MainActivity$5,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.RECORD_AUDIO",com.samdelong.timemachine.MainActivity,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.samdelong.timemachine.MainActivity,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.RECORD_AUDIO",com.samdelong.timemachine.MainActivity$5$2,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.samdelong.timemachine.MainActivity$3,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3$1: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true
TimeMachine.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.samdelong.timemachine.MainActivity$5,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,true,<com.samdelong.timemachine.MainActivity$3: void onClick(android.view.View)>,truetinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.a,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.AddTrackerActivity,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.firebirdberlin.tinytimetracker.m,true,<com.firebirdberlin.tinytimetracker.H: boolean c()>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.P.a,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.firebirdberlin.tinytimetracker.Settings,true,<com.firebirdberlin.tinytimetracker.H: boolean c()>,false,null,false,null,false
tinytimetracker.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.firebirdberlin.tinytimetracker.H,true,<com.firebirdberlin.tinytimetracker.H: boolean c()>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.o,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.Settings,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.P.c,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.firebirdberlin.tinytimetracker.BillingHelperActivity,true,<com.firebirdberlin.tinytimetracker.H: boolean c()>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.M,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.TinyTimeTracker,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,false
tinytimetracker.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.firebirdberlin.tinytimetracker.g,true,<com.firebirdberlin.tinytimetracker.H: boolean c()>,false,null,false,null,false
tinytimetracker.apk,"android.permission.ACCESS_FINE_LOCATION",com.firebirdberlin.tinytimetracker.WiFiService,true,<com.firebirdberlin.tinytimetracker.TinyTimeTracker: boolean a(android.content.Context,java.lang.String)>,false,null,false,null,falseTitan-Health-Hub.apk,"android.permission.READ_EXTERNAL_STORAGE",devesh.ephrine.health.hub.MainActivity,true,<devesh.ephrine.health.hub.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
Titan-Health-Hub.apk,"android.permission.CAMERA",devesh.ephrine.health.hub.MainActivity,true,<devesh.ephrine.health.hub.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,falseTitanCompanion.apk,"android.permission.WRITE_EXTERNAL_STORAGE",pt.joaomneto.titancompanion.adventure.Adventure$Companion$showAlert,true,<pt.joaomneto.titancompanion.TCPreferenceActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,false
TitanCompanion.apk,"android.permission.WRITE_EXTERNAL_STORAGE",pt.joaomneto.titancompanion.TCPreferenceActivity,true,<pt.joaomneto.titancompanion.TCPreferenceActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,false
TitanCompanion.apk,"android.permission.READ_EXTERNAL_STORAGE",pt.joaomneto.titancompanion.adventure.Adventure$Companion$showAlert,true,<pt.joaomneto.titancompanion.TCPreferenceActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,false
TitanCompanion.apk,"android.permission.WRITE_EXTERNAL_STORAGE",pt.joaomneto.titancompanion.MainActivity,true,<pt.joaomneto.titancompanion.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,false
TitanCompanion.apk,"android.permission.READ_EXTERNAL_STORAGE",pt.joaomneto.titancompanion.TCPreferenceActivity,true,<pt.joaomneto.titancompanion.TCPreferenceActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,false
TitanCompanion.apk,"android.permission.READ_EXTERNAL_STORAGE",pt.joaomneto.titancompanion.MainActivity,true,<pt.joaomneto.titancompanion.MainActivity: void onCreate(android.os.Bundle)>,false,null,false,null,falseTOE-DCMetroExplorer.apk,"android.permission.ACCESS_FINE_LOCATION",com.yubo.han.toe.activity.MenuActivity$initUI,true,<com.yubo.han.toe.activity.MenuActivity$initUI$1: void onClick(android.view.View)>,false,null,false,null,false
TOE-DCMetroExplorer.apk,"android.permission.ACCESS_FINE_LOCATION",com.yubo.han.toe.Services.PersistanceManager,true,<com.yubo.han.toe.activity.MenuActivity: void checkLocationPermission()>,true,<com.yubo.han.toe.activity.MenuActivity: void checkLocationPermission()>,false,null,true
TOE-DCMetroExplorer.apk,"android.permission.ACCESS_FINE_LOCATION",com.yubo.han.toe.activity.MenuActivity,true,<com.yubo.han.toe.activity.MenuActivity$initUI$1: void onClick(android.view.View)>,true,<com.yubo.han.toe.activity.MenuActivity: void checkLocationPermission()>,false,null,trueTrackMyRide.apk,"android.permission.ACCESS_FINE_LOCATION",com.rohan.trackmyrideversion0.TrackerService,true,<com.rohan.trackmyrideversion0.TrackerService: void requestLocationUpdates()>,false,null,false,null,false
TrackMyRide.apk,"android.permission.ACCESS_FINE_LOCATION",com.rohan.trackmyrideversion0.DriverActivity,true,<com.rohan.trackmyrideversion0.DriverActivity: void requestLocation()>,true,<com.rohan.trackmyrideversion0.DriverActivity: void requestLocation()>,false,null,truetrackworktime.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.zephyrsoft.trackworktime.-$$Lambda$WorkTimeTrackerActivity,true,<org.zephyrsoft.trackworktime.util.PermissionsUtil: boolean missingPermissionForExternalStorage(android.content.Context)>,false,null,false,null,false
trackworktime.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.zephyrsoft.trackworktime.Basics,true,<org.zephyrsoft.trackworktime.WorkTimeTrackerActivity: void restoreFromSd()>,true,<org.zephyrsoft.trackworktime.WorkTimeTrackerActivity: void restoreFromSd()>,false,null,true
trackworktime.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.zephyrsoft.trackworktime.util.PermissionsUtil,true,<org.zephyrsoft.trackworktime.WorkTimeTrackerActivity: void restoreFromSd()>,true,<org.zephyrsoft.trackworktime.WorkTimeTrackerActivity: void restoreFromSd()>,false,null,true
trackworktime.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.zephyrsoft.trackworktime.WorkTimeTrackerActivity,true,<org.zephyrsoft.trackworktime.WorkTimeTrackerActivity: void restoreFromSd()>,true,<org.zephyrsoft.trackworktime.WorkTimeTrackerActivity: void restoreFromSd()>,false,null,true
trackworktime.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.zephyrsoft.trackworktime.options.Key,true,<org.zephyrsoft.trackworktime.util.PermissionsUtil: boolean missingPermissionForExternalStorage(android.content.Context)>,false,null,false,null,falsetramhunter.apk,"android.permission.ACCESS_FINE_LOCATION",com.andybotting.tramhunter.dao.TramHunterDB,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true
tramhunter.apk,"android.permission.ACCESS_FINE_LOCATION",com.andybotting.tramhunter.TramHunterConstants,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true
tramhunter.apk,"android.permission.ACCESS_FINE_LOCATION",com.andybotting.tramhunter.objects.StopsList,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true
tramhunter.apk,"android.permission.ACCESS_FINE_LOCATION",com.andybotting.tramhunter.activity.NearStopsActivity,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,true,<com.andybotting.tramhunter.activity.NearStopsActivity: void buildAlertNoLocationServices()>,trueTranslator.apk,"android.permission.READ_EXTERNAL_STORAGE",com.kalki.psbhat.cameraapplication.OpenCamera,false,null,true,<com.kalki.psbhat.cameraapplication.OpenCamera: void onCreate(android.os.Bundle)>,false,null,false
Translator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kalki.psbhat.cameraapplication.OpenCamera,false,null,true,<com.kalki.psbhat.cameraapplication.OpenCamera: void onCreate(android.os.Bundle)>,false,null,false
Translator.apk,"android.permission.CAMERA",com.kalki.psbhat.cameraapplication.OpenCamera,false,null,true,<com.kalki.psbhat.cameraapplication.OpenCamera: void onCreate(android.os.Bundle)>,false,null,false
Translator.apk,"android.permission.READ_EXTERNAL_STORAGE",com.kalki.psbhat.cameraapplication.Home,false,null,true,<com.kalki.psbhat.cameraapplication.Home: void onCreate(android.os.Bundle)>,false,null,false
Translator.apk,"android.permission.CAMERA",com.kalki.psbhat.cameraapplication.Home,false,null,true,<com.kalki.psbhat.cameraapplication.Home: void onCreate(android.os.Bundle)>,false,null,false
Translator.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kalki.psbhat.cameraapplication.Home,false,null,true,<com.kalki.psbhat.cameraapplication.Home: void onCreate(android.os.Bundle)>,false,null,falseTravel-Mate.apk,"android.permission.READ_PHONE_STATE",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.destinations.description.PlacesOnMapActivity,true,<io.github.project_travel_mate.destinations.description.PlacesOnMapActivity: void showMarker(java.lang.Double,java.lang.Double,java.lang.String)>,false,null,false,null,false
Travel-Mate.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_CONTACTS",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_PHONE_STATE",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.CAMERA",io.github.project_travel_mate.login.LoginActivity,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,true
Travel-Mate.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_CONTACTS",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_CONTACTS",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_PHONE_STATE",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.CAMERA",io.github.project_travel_mate.destinations.CityFragment,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,true
Travel-Mate.apk,"android.permission.CAMERA",io.github.project_travel_mate.travel.TravelFragment,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,true
Travel-Mate.apk,"android.permission.WRITE_CONTACTS",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_CONTACTS",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.CAMERA",io.github.project_travel_mate.MainActivity,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,true
Travel-Mate.apk,"android.permission.WRITE_EXTERNAL_STORAGE",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_CONTACTS",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_CONTACTS",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.CAMERA",io.github.project_travel_mate.utilities.UtilitiesFragment,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,true
Travel-Mate.apk,"android.permission.READ_PHONE_STATE",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_CONTACTS",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.destinations.description.-$$Lambda$PlacesOnMapActivity$1,true,<io.github.project_travel_mate.destinations.description.PlacesOnMapActivity: void showMarker(java.lang.Double,java.lang.Double,java.lang.String)>,false,null,false,null,false
Travel-Mate.apk,"android.permission.WRITE_CONTACTS",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_CONTACTS",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_PHONE_STATE",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_PHONE_STATE",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.login.LoginActivity,false,null,true,<io.github.project_travel_mate.login.LoginActivity: void getRunTimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_CONTACTS",io.github.project_travel_mate.mytrips.MyTripsFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_FINE_LOCATION",io.github.project_travel_mate.utilities.UtilitiesFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.WRITE_CONTACTS",io.github.project_travel_mate.travel.TravelFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.project_travel_mate.destinations.CityFragment,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.READ_EXTERNAL_STORAGE",io.github.project_travel_mate.MainActivity,false,null,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.travel.MapViewRealTimeActivity,true,<io.github.project_travel_mate.travel.MapViewRealTimeActivity: void showMarker(java.lang.Double,java.lang.Double,java.lang.String,java.lang.Integer)>,false,null,false,null,false
Travel-Mate.apk,"android.permission.ACCESS_COARSE_LOCATION",io.github.project_travel_mate.travel.-$$Lambda$MapViewRealTimeActivity$1,true,<io.github.project_travel_mate.travel.MapViewRealTimeActivity: void showMarker(java.lang.Double,java.lang.Double,java.lang.String,java.lang.Integer)>,false,null,false,null,false
Travel-Mate.apk,"android.permission.CAMERA",io.github.project_travel_mate.mytrips.MyTripsFragment,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,true,<io.github.project_travel_mate.MainActivity: void getRuntimePermissions()>,false,null,trueTravelMaker_android.apk,"android.permission.GET_ACCOUNTS",com.ellalee.travelmaker.PlanSQLiteHelper,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,false
TravelMaker_android.apk,"android.permission.GET_ACCOUNTS",com.ellalee.travelmaker.MainActivity,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.ellalee.travelmaker.MainActivity: void chooseAccount()>,false,null,true
TravelMaker_android.apk,"android.permission.GET_ACCOUNTS",com.ellalee.travelmaker.LoginPage,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.ellalee.travelmaker.LoginPage: void chooseAccount()>,false,null,true
TravelMaker_android.apk,"android.permission.GET_ACCOUNTS",com.ellalee.travelmaker.CalendarSync,false,null,true,<com.ellalee.travelmaker.MainActivity: void chooseAccount()>,false,null,falsetrickytripper.apk,"android.permission.READ_CONTACTS",de.koelle.christian.trickytripper.activities.ParticipantEditActivity,true,<de.koelle.christian.trickytripper.activities.ParticipantEditActivity: boolean l()>,true,<de.koelle.christian.trickytripper.activities.ParticipantEditActivity: void h()>,true,<de.koelle.christian.trickytripper.activities.ParticipantEditActivity: void m()>,true
trickytripper.apk,"android.permission.READ_CONTACTS",de.koelle.christian.trickytripper.g.d,true,<de.koelle.christian.trickytripper.activities.ParticipantEditActivity: boolean l()>,true,<de.koelle.christian.trickytripper.activities.ParticipantEditActivity: void h()>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
trickytripper.apk,"android.permission.READ_EXTERNAL_STORAGE",de.koelle.christian.trickytripper.activities.SaveToSdCardActivity,true,<de.koelle.christian.trickytripper.activities.SaveToSdCardActivity: boolean g()>,false,null,false,null,falsetts-test-app.apk,"android.permission.READ_EXTERNAL_STORAGE",com.artemnikitin.tts.MainActivity,true,<com.artemnikitin.tts.MainActivity$1: void onClick(android.view.View)>,true,<com.artemnikitin.tts.MainActivity$1: void onClick(android.view.View)>,false,null,true
tts-test-app.apk,"android.permission.READ_EXTERNAL_STORAGE",com.artemnikitin.tts.b,true,<com.artemnikitin.tts.MainActivity$1: void onClick(android.view.View)>,true,<com.artemnikitin.tts.MainActivity$1: void onClick(android.view.View)>,false,null,truetufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.ui.MainActivity,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,true
tufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.AegisApplication,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,true
tufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.ui.AegisActivity,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,true
tufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.ui.-$$Lambda$MainActivity,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,true
tufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.vault.VaultEntry,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,true
tufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.vault.VaultManager,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,true
tufa.apk,"android.permission.CAMERA",com.beemdevelopment.aegis.otp.GoogleAuthInfo,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,true,<com.beemdevelopment.aegis.ui.MainActivity: void startScanActivity()>,false,null,trueTurboLauncherBeta.apk,"android.permission.CALL_PHONE",com.phonemetra.turbo.launcher.beta.Launcher,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,false,null,true
TurboLauncherBeta.apk,"android.permission.CALL_PHONE",com.phonemetra.turbo.launcher.beta.n0,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,false,null,true
TurboLauncherBeta.apk,"android.permission.CALL_PHONE",com.phonemetra.turbo.launcher.beta.n2.b0,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,false,null,true
TurboLauncherBeta.apk,"android.permission.CALL_PHONE",com.phonemetra.turbo.launcher.beta.s2.j0,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,false,null,true
TurboLauncherBeta.apk,"android.permission.CALL_PHONE",com.phonemetra.turbo.launcher.beta.shortcuts.a,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,true,<com.phonemetra.turbo.launcher.beta.Launcher: boolean V(android.content.Intent,com.phonemetra.turbo.launcher.beta.c1)>,false,null,trueturtle-wear.apk,"android.permission.ACCESS_FINE_LOCATION",uk.co.ijhdev.trtlware.Utils.WearableBackgroundListener$runnable,true,<uk.co.ijhdev.trtlware.Utils.WearableBackgroundListener: void getWeather()>,false,null,false,null,false
turtle-wear.apk,"android.permission.ACCESS_FINE_LOCATION",uk.co.ijhdev.trtlware.Utils.WearableBackgroundListener$runnableTrade,true,<uk.co.ijhdev.trtlware.Utils.WearableBackgroundListener: void getWeather()>,false,null,false,null,false
turtle-wear.apk,"android.permission.ACCESS_FINE_LOCATION",uk.co.ijhdev.trtlware.Activity.WareSettingsActivity,true,<uk.co.ijhdev.trtlware.Activity.WareSettingsActivity: void setDefaults()>,true,<uk.co.ijhdev.trtlware.Activity.WareSettingsActivity: void setDefaults()>,false,null,true
turtle-wear.apk,"android.permission.ACCESS_FINE_LOCATION",uk.co.ijhdev.trtlware.Utils.WearableBackgroundListener,true,<uk.co.ijhdev.trtlware.Utils.WearableBackgroundListener: void getWeather()>,false,null,false,null,falseTuskyUncensored.apk,"android.permission.CAMERA",com.keylesspalace.tusky.components.announcements.AnnouncementsActivity,false,null,true,<com.theartofdev.edmodo.cropper.CropImageActivity: void onCreate(android.os.Bundle)>,false,null,false
TuskyUncensored.apk,"android.permission.READ_EXTERNAL_STORAGE",com.keylesspalace.tusky.components.announcements.AnnouncementsActivity,false,null,true,<com.theartofdev.edmodo.cropper.CropImageActivity: void onCreate(android.os.Bundle)>,false,null,falsetxTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.utils.TransactionHandler,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,false,null,false,null,false
txTenna.apk,"android.permission.BLUETOOTH",com.samourai.txtenna.NetworkingActivity,true,<com.samourai.txtenna.NetworkingActivity: boolean hasBluetoothPermisson()>,false,null,true,<com.samourai.txtenna.NetworkingActivity: void requestBluetoothPermission()>,false
txTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.prefs.PrefsUtil,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,false,null,false,null,false
txTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.utils.IncomingMessagesManager,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,false,null,false,null,false
txTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.payload.PayloadFactory,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,false,null,false,null,false
txTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.utils.goTennaUtil,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,false,null,false,null,false
txTenna.apk,"android.permission.ACCESS_FINE_LOCATION",com.samourai.txtenna.NetworkingActivity,true,<com.samourai.txtenna.NetworkingActivity: boolean hasLocationpermission()>,true,<com.samourai.txtenna.NetworkingActivity: void requestLocationPermission()>,true,<com.samourai.txtenna.NetworkingActivity: void requestLocationPermission()>,true
txTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.adapters.BroadcastLogsAdapter,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,false,null,false,null,false
txTenna.apk,"android.permission.CAMERA",com.samourai.txtenna.MainActivity,true,<com.samourai.txtenna.MainActivity: boolean hasCameraPermission()>,true,<com.samourai.txtenna.MainActivity: void requestCameraPermission()>,true,<com.samourai.txtenna.MainActivity: void requestCameraPermission()>,trueudacity-inventory-app.apk,"android.permission.READ_EXTERNAL_STORAGE",com.theleafapps.pro.udacityinventoryapp.StockDetailActivity,true,<com.theleafapps.pro.udacityinventoryapp.StockDetailActivity: void onPhotoProductUpdate(android.view.View)>,true,<com.theleafapps.pro.udacityinventoryapp.StockDetailActivity: void onPhotoProductUpdate(android.view.View)>,false,null,trueUnicodePad.apk,"android.permission.READ_EXTERNAL_STORAGE",jp.ddo.hotmist.unicodepad.g,false,null,false,null,true,<androidx.core.app.a: boolean j(android.app.Activity,java.lang.String)>,false
UnicodePad.apk,"android.permission.READ_EXTERNAL_STORAGE",jp.ddo.hotmist.unicodepad.i,false,null,false,null,true,<androidx.core.app.a: boolean j(android.app.Activity,java.lang.String)>,falseuniversal-file-uploader.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.cloudcraftgaming.universalfileuploader.UploadFileActivity,true,<com.cloudcraftgaming.universalfileuploader.UploadFileActivity: void requestRuntimePermission()>,true,<com.cloudcraftgaming.universalfileuploader.UploadFileActivity: void requestRuntimePermission()>,false,null,trueUnofficial-Sticky-Notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",aliendrew.ms.stickynotes.MainActivity,false,null,true,<aliendrew.ms.stickynotes.MainActivity: boolean y()>,false,null,false
Unofficial-Sticky-Notes.apk,"android.permission.WRITE_EXTERNAL_STORAGE",aliendrew.ms.stickynotes.MainActivity$b,false,null,true,<aliendrew.ms.stickynotes.MainActivity: boolean y()>,false,null,falseUnzip-Corrupt.apk,"android.permission.READ_EXTERNAL_STORAGE",com.kyhsgeekcode.fixzip.MainActivity,false,null,true,<com.kyhsgeekcode.fixzip.FixZip: void Run(com.kyhsgeekcode.fixzip.MainActivity)>,false,null,false
Unzip-Corrupt.apk,"android.permission.READ_EXTERNAL_STORAGE",com.kyhsgeekcode.fixzip.FixZip,false,null,true,<com.kyhsgeekcode.fixzip.FixZip: void Run(com.kyhsgeekcode.fixzip.MainActivity)>,false,null,false
Unzip-Corrupt.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kyhsgeekcode.fixzip.MainActivity,true,<com.kyhsgeekcode.fixzip.MainActivity: void onCreate(android.os.Bundle)>,true,<com.kyhsgeekcode.fixzip.FixZip: void Run(com.kyhsgeekcode.fixzip.MainActivity)>,false,null,true
Unzip-Corrupt.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kyhsgeekcode.fixzip.FixZip,false,null,true,<com.kyhsgeekcode.fixzip.FixZip: void Run(com.kyhsgeekcode.fixzip.MainActivity)>,false,null,falseUPES-SPE-Fest.apk,"android.permission.READ_EXTERNAL_STORAGE",com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity,true,<com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity: boolean checkPermission(android.content.Context)>,true,<com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity$10: void onClick(android.content.DialogInterface,int)>,true,<com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity: boolean checkPermission(android.content.Context)>,true
UPES-SPE-Fest.apk,"android.permission.CAMERA",com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity,true,<com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity: boolean checkCamPermission(android.content.Context)>,true,<com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity$9: void onClick(android.content.DialogInterface,int)>,true,<com.myapps.upesse.upes_spefest.ui.activity.NewPostActivity: boolean checkCamPermission(android.content.Context)>,trueuQrl.apk,"android.permission.CAMERA",com.phaqlow.uqrl.MainActivity,true,<com.phaqlow.uqrl.MainActivity: void onResume()>,true,<com.phaqlow.uqrl.MainActivity: void onResume()>,false,null,trueutexas-utilities.apk,"android.permission.ACCESS_FINE_LOCATION",com.nasageek.utexasutilities.activities.-$$Lambda$CampusMapActivity,false,null,true,<com.nasageek.utexasutilities.activities.CampusMapActivity: void onStart()>,false,null,false
utexas-utilities.apk,"android.permission.ACCESS_FINE_LOCATION",com.nasageek.utexasutilities.activities.CampusMapActivity,true,<com.commonsware.cwac.security.RuntimePermissionUtils: boolean hasPermission(java.lang.String)>,true,<com.nasageek.utexasutilities.activities.CampusMapActivity: void onStart()>,false,null,truevanilla-music-cover-fetch.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kanedias.vanilla.coverfetch.CoverShowActivity,true,<com.kanedias.vanilla.plugins.PluginUtils: boolean havePermissions(android.content.Context,java.lang.String)>,false,null,false,null,falsevanilla-music-lyrics-search.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kanedias.vanilla.lyrics.LyricsShowActivity,true,<com.kanedias.vanilla.plugins.PluginUtils: boolean havePermissions(android.content.Context,java.lang.String)>,false,null,false,null,falsevanilla-music-tag-editor.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kanedias.vanilla.audiotag.TagEditActivity,true,<com.kanedias.vanilla.plugins.PluginUtils: boolean havePermissions(android.content.Context,java.lang.String)>,false,null,false,null,false
vanilla-music-tag-editor.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.kanedias.vanilla.audiotag.PluginTagWrapper,true,<com.kanedias.vanilla.plugins.PluginUtils: boolean havePermissions(android.content.Context,java.lang.String)>,false,null,false,null,falsevector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.MyApplicationInterface,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.ui.MainUI,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.SpeechControl,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.READ_EXTERNAL_STORAGE",net.sourceforge.opencamera.StorageUtils,true,<net.sourceforge.opencamera.StorageUtils: net.sourceforge.opencamera.StorageUtils$Media getLatestMedia(net.sourceforge.opencamera.StorageUtils$UriType)>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.MainActivity,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.READ_EXTERNAL_STORAGE",net.sourceforge.opencamera.MainActivity,true,<net.sourceforge.opencamera.StorageUtils: net.sourceforge.opencamera.StorageUtils$Media getLatestMedia(net.sourceforge.opencamera.StorageUtils$UriType)>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.SoundPoolManager,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.LocationSupplier,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.MainActivity,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.PermissionHandler,false,null,true,<net.sourceforge.opencamera.PermissionHandler: void requestCameraPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestCameraPermission()>,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.PreferenceKeys,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.MyApplicationInterface,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.cameracontroller.CameraControllerException,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.ui.MainUI,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.PermissionHandler,false,null,true,<net.sourceforge.opencamera.PermissionHandler: void requestRecordAudioPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestRecordAudioPermission()>,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.cameracontroller.CameraControllerManager2,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.cameracontroller.CameraControllerManager1,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.MainActivity,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.cameracontroller.CameraController1,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.preview.CanvasView,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.preview.Preview$1BatteryCheckVideoTimerTask,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.SpeechControl,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.preview.ApplicationInterface,true,<net.sourceforge.opencamera.preview.Preview: void switchVideo(boolean,boolean)>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.PermissionHandler,true,<net.sourceforge.opencamera.LocationSupplier: boolean setupLocationListener()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.preview.Preview,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestCameraPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestCameraPermission()>,true
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.ui.MainUI,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.cameracontroller.CameraController2,true,<net.sourceforge.opencamera.preview.Preview: void switchVideo(boolean,boolean)>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.preview.camerasurface.MySurfaceView,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.PermissionHandler,true,<net.sourceforge.opencamera.LocationSupplier: boolean setupLocationListener()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.remotecontrol.DeviceScanner,false,null,true,<net.sourceforge.opencamera.remotecontrol.DeviceScanner: void askForLocationPermission()>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.preview.Preview,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.preview.CanvasView,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.MainActivity,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.preview.Preview,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestStoragePermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestStoragePermission()>,true
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.preview.VideoQualityHandler,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.MyPreferenceFragment,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.cameracontroller.CameraController2,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.cameracontroller.CameraController1,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.remotecontrol.BluetoothRemoteControl,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.remotecontrol.DeviceScanner,false,null,true,<net.sourceforge.opencamera.remotecontrol.DeviceScanner: void askForLocationPermission()>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.SoundPoolManager,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.preview.Preview,true,<net.sourceforge.opencamera.preview.Preview: void switchVideo(boolean,boolean)>,true,<net.sourceforge.opencamera.PermissionHandler: void requestRecordAudioPermission()>,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,true
vector-camera.apk,"android.permission.CAMERA",net.sourceforge.opencamera.preview.camerasurface.MySurfaceView,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.preview.Preview,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_COARSE_LOCATION",net.sourceforge.opencamera.MyApplicationInterface,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,false
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.preview.camerasurface.MySurfaceView,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.preview.VideoProfile,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.LocationSupplier,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestLocationPermission()>,true
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.MainActivity,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.cameracontroller.CameraController,true,<net.sourceforge.opencamera.preview.Preview: void switchVideo(boolean,boolean)>,false,null,false,null,false
vector-camera.apk,"android.permission.RECORD_AUDIO",net.sourceforge.opencamera.MyApplicationInterface,true,<net.sourceforge.opencamera.preview.Preview: net.sourceforge.opencamera.preview.VideoProfile getVideoProfile()>,false,null,true,<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>,false
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.PermissionHandler,false,null,true,<net.sourceforge.opencamera.PermissionHandler: void requestStoragePermission()>,true,<net.sourceforge.opencamera.PermissionHandler: void requestStoragePermission()>,false
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.cameracontroller.CameraController2,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",net.sourceforge.opencamera.cameracontroller.CameraController1,true,<net.sourceforge.opencamera.preview.Preview: void openCamera()>,false,null,false,null,false
vector-camera.apk,"android.permission.ACCESS_FINE_LOCATION",net.sourceforge.opencamera.MyApplicationInterface,true,<net.sourceforge.opencamera.LocationSupplier: void freeLocationListeners()>,false,null,false,null,falseVectorCamera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.MainActivity$onCreate,false,null,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestStoragePermissionsToGoToLibrary(android.app.Activity)>,false,null,false
VectorCamera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.ImageListActivity,false,null,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestStoragePermissionsToGoToLibrary(android.app.Activity)>,false,null,false
VectorCamera.apk,"android.permission.RECORD_AUDIO",com.dozingcatsoftware.vectorcamera.MainActivity,false,null,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestCameraAndStoragePermissions(android.app.Activity)>,false,null,false
VectorCamera.apk,"android.permission.CAMERA",com.dozingcatsoftware.vectorcamera.PermissionsChecker,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: boolean hasPermission(android.app.Activity,java.lang.String)>,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestCameraAndStoragePermissions(android.app.Activity)>,false,null,true
VectorCamera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.PermissionsChecker,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: boolean hasPermission(android.app.Activity,java.lang.String)>,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestStoragePermissionsToGoToLibrary(android.app.Activity)>,false,null,true
VectorCamera.apk,"android.permission.READ_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.PermissionsChecker,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: boolean hasPermission(android.app.Activity,java.lang.String)>,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestStoragePermissionsToGoToLibrary(android.app.Activity)>,false,null,true
VectorCamera.apk,"android.permission.READ_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.MainActivity$onCreate,false,null,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestStoragePermissionsToGoToLibrary(android.app.Activity)>,false,null,false
VectorCamera.apk,"android.permission.CAMERA",com.dozingcatsoftware.vectorcamera.MainActivity,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: boolean hasPermission(android.app.Activity,java.lang.String)>,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestCameraAndStoragePermissions(android.app.Activity)>,false,null,true
VectorCamera.apk,"android.permission.READ_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.ImageListActivity,false,null,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestStoragePermissionsToGoToLibrary(android.app.Activity)>,false,null,false
VectorCamera.apk,"android.permission.READ_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.MainActivity,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: boolean hasPermission(android.app.Activity,java.lang.String)>,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestCameraAndStoragePermissions(android.app.Activity)>,false,null,true
VectorCamera.apk,"android.permission.RECORD_AUDIO",com.dozingcatsoftware.vectorcamera.PermissionsChecker,false,null,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestCameraAndStoragePermissions(android.app.Activity)>,false,null,false
VectorCamera.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.dozingcatsoftware.vectorcamera.MainActivity,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: boolean hasPermission(android.app.Activity,java.lang.String)>,true,<com.dozingcatsoftware.vectorcamera.PermissionsChecker: void requestCameraAndStoragePermissions(android.app.Activity)>,false,null,trueVectors.apk,"android.permission.WRITE_EXTERNAL_STORAGE",in.swifiic.vectors.MainActivity,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,false,null,true
Vectors.apk,"android.permission.GET_ACCOUNTS",in.swifiic.vectors.MainActivity,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,false,null,true
Vectors.apk,"android.permission.READ_EXTERNAL_STORAGE",in.swifiic.vectors.MainActivity,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,false,null,true
Vectors.apk,"android.permission.ACCESS_COARSE_LOCATION",in.swifiic.vectors.MainActivity,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,true,<in.swifiic.vectors.MainActivity: void getPermissions()>,false,null,trueVehicleInfoOCR.apk,"android.permission.CAMERA",com.udayraj.vehicleinfolive.MainActivity,true,<com.udayraj.vehicleinfolive.utils.SimplePermissions: boolean hasAllPermissions()>,false,null,false,null,false
VehicleInfoOCR.apk,"android.permission.CAMERA",com.udayraj.vehicleinfolive.utils.SimplePermissions,true,<com.udayraj.vehicleinfolive.utils.SimplePermissions: boolean hasAllPermissions()>,false,null,false,null,falseveterondo.apk,"android.permission.ACCESS_FINE_LOCATION",com.saladdressing.veterondo.services.Daydream,true,<com.saladdressing.veterondo.services.Daydream: java.util.ArrayList getLocation()>,false,null,false,null,false
veterondo.apk,"android.permission.ACCESS_FINE_LOCATION",com.saladdressing.veterondo.activities.MainActivity,true,<com.saladdressing.veterondo.activities.MainActivity: java.util.ArrayList getLocation()>,true,<com.saladdressing.veterondo.activities.MainActivity: java.util.ArrayList getLocation()>,false,null,true
veterondo.apk,"android.permission.ACCESS_FINE_LOCATION",com.saladdressing.veterondo.enums.WeatherKind,true,<com.saladdressing.veterondo.activities.MainActivity: java.util.ArrayList getLocation()>,true,<com.saladdressing.veterondo.activities.MainActivity: java.util.ArrayList getLocation()>,false,null,truevideo-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocationController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.AndroidUtilities,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.AndroidUtilities,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.DispatchQueue,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.voip.VoIPPendingCall,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.SharedConfig,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPActionsReceiver,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.AndroidUtilities,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
video-trimmer.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.LocaleController,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
video-trimmer.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.MessagesController,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
video-trimmer.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.support.SparseLongArray,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.MediaDataController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.XiaomiUtilities,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.MessagesController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.LocaleController,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
video-trimmer.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPActionsReceiver,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.SharedConfig,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.voip.VoIPService: int onStartCommand(android.content.Intent,int,int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocationSharingService,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.XiaomiUtilities,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.LocaleController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.MessagesController,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
video-trimmer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.MessagesController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.-$$Lambda$ContactsController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.BuildVars,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.FileLoadOperation,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.ContactsController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.NotificationsController,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.NotificationsController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.LocaleController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.MediaController,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
video-trimmer.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.FileLog,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
video-trimmer.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.ChatObject,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.MessagesController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.MediaController,true,<org.telegram.messenger.MediaController: void lambda$loadGalleryPhotosAlbums$40(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.FileLog,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.SendMessagesHelper,true,<org.telegram.messenger.MediaController: void lambda$loadGalleryPhotosAlbums$40(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.ChatObject,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.BaseController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocaleController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.MediaDataController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.ContactsLoadingObserver,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
video-trimmer.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.BuildVars,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,falseVideoPlayer.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.mahainc.videoplayer.activities.MainActivity,true,<com.mahainc.videoplayer.activities.MainActivity: boolean checkPermission()>,true,<com.mahainc.videoplayer.activities.MainActivity: void requestPermission()>,true,<com.mahainc.videoplayer.activities.MainActivity: void requestPermission()>,trueVillage.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.MediaController,true,<org.telegram.messenger.MediaController: void lambda$loadGalleryPhotosAlbums$40(int)>,false,null,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.MediaController,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.MessagesController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.NotificationsController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.BuildVars,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.ContactsController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.ContactsLoadingObserver,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.ChatObject,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.MessagesController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.MessagesController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.XiaomiUtilities,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.BaseController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.support.SparseLongArray,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.MediaDataController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Village.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.AndroidUtilities,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Village.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.LocaleController,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.AndroidUtilities,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.voip.VoIPPendingCall,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPBaseService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPActionsReceiver,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.NotificationsController,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Village.apk,"android.permission.ACCESS_COARSE_LOCATION",org.telegram.messenger.MessagesController,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,true
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.FileLog,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.SharedConfig,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Village.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.SharedConfig,true,<org.telegram.ui.DialogsActivity: void onResume()>,false,null,true,<org.telegram.ui.DialogsActivity: void onResume()>,false
Village.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.MediaDataController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.FileLog,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.DispatchQueue,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocaleController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.ChatObject,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.SendMessagesHelper,true,<org.telegram.messenger.MediaController: void lambda$loadGalleryPhotosAlbums$40(int)>,false,null,false,null,false
Village.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.LocaleController,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
Village.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.LocaleController,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Village.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPActionsReceiver,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,false,null,false,null,false
Village.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.telegram.messenger.XiaomiUtilities,true,<org.telegram.ui.DialogsActivity: void askForPermissons(boolean)>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.FileLoadOperation,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.AndroidUtilities,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.ACCESS_FINE_LOCATION",org.telegram.messenger.MessagesController,false,null,true,<org.telegram.ui.Adapters.MentionsAdapter: void checkLocationPermissionsOrStart()>,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.voip.VoIPBaseService: void acceptIncomingCallFromNotification()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Village.apk,"android.permission.CAMERA",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.voip.VoIPService: int onStartCommand(android.content.Intent,int,int)>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocationController,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.-$$Lambda$ContactsController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.voip.VoIPService,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,false
Village.apk,"android.permission.READ_EXTERNAL_STORAGE",org.telegram.messenger.LocationSharingService,true,<org.telegram.messenger.MediaController: void lambda$checkGallery$1(int)>,false,null,false,null,false
Village.apk,"android.permission.RECORD_AUDIO",org.telegram.messenger.BuildVars,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,true,<org.telegram.ui.ChatActivity: boolean playFirstUnreadVoiceMessage()>,false,null,true
Village.apk,"android.permission.READ_CONTACTS",org.telegram.messenger.LocaleController,true,<org.telegram.messenger.ContactsController: boolean hasContactsPermission()>,false,null,false,null,falseVINScanner.apk,"android.permission.CAMERA",com.ismaelDeka.vinscanner.ui.MainActivity,true,<com.ismaelDeka.vinscanner.ui.MainActivity$1: void onClick(android.view.View)>,true,<com.ismaelDeka.vinscanner.ui.MainActivity$1: void onClick(android.view.View)>,false,null,truevirtualtreasurehunting.apk,"android.permission.ACCESS_FINE_LOCATION",com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity: void onCreate(android.os.Bundle)>,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity$4: void onClick(android.content.DialogInterface,int)>,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,true
virtualtreasurehunting.apk,"android.permission.ACCESS_FINE_LOCATION",com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity$NewGameListener,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity: void onCreate(android.os.Bundle)>,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity$4: void onClick(android.content.DialogInterface,int)>,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,true
virtualtreasurehunting.apk,"android.permission.ACCESS_FINE_LOCATION",com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity$AssistButtonListener,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity: void onCreate(android.os.Bundle)>,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity$4: void onClick(android.content.DialogInterface,int)>,true,<com.github.rubenwilhelmsen.virtualtreasurehunting.MainMenuActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>,trueVotenote.apk,"android.permission.READ_EXTERNAL_STORAGE",de.oerntec.votenote.subject_management.SubjectManagementListActivity,true,<de.oerntec.votenote.helpers.Permissions: boolean hasPermission(android.content.Context,java.lang.String)>,false,null,false,null,false
Votenote.apk,"android.permission.READ_CONTACTS",de.oerntec.votenote.import_export.BackupHelper,false,null,true,<de.oerntec.votenote.helpers.Permissions: void requestPermission(android.app.Activity,java.lang.String)>,true,<de.oerntec.votenote.helpers.Permissions: void requestPermission(android.app.Activity,java.lang.String)>,false
Votenote.apk,"android.permission.READ_EXTERNAL_STORAGE",de.oerntec.votenote.helpers.Permissions,true,<de.oerntec.votenote.helpers.Permissions: boolean hasPermission(android.content.Context,java.lang.String)>,false,null,false,null,false
Votenote.apk,"android.permission.READ_CONTACTS",de.oerntec.votenote.subject_management.SubjectManagementListActivity,true,<de.oerntec.votenote.helpers.Permissions: boolean hasPermission(android.content.Context,java.lang.String)>,true,<de.oerntec.votenote.helpers.Permissions: void requestPermission(android.app.Activity,java.lang.String)>,true,<de.oerntec.votenote.helpers.Permissions: void requestPermission(android.app.Activity,java.lang.String)>,true
Votenote.apk,"android.permission.READ_CONTACTS",de.oerntec.votenote.helpers.Permissions,true,<de.oerntec.votenote.helpers.Permissions: boolean hasPermission(android.content.Context,java.lang.String)>,true,<de.oerntec.votenote.helpers.Permissions: void requestPermission(android.app.Activity,java.lang.String)>,true,<de.oerntec.votenote.helpers.Permissions: void requestPermission(android.app.Activity,java.lang.String)>,true
Votenote.apk,"android.permission.READ_EXTERNAL_STORAGE",de.oerntec.votenote.import_export.BackupHelper,true,<de.oerntec.votenote.helpers.Permissions: boolean hasPermission(android.content.Context,java.lang.String)>,false,null,false,null,falsevSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.a.a,false,null,true,<com.braedin.butler.vspeed.vario.app.MainActivity$10: void onDismiss(android.content.DialogInterface)>,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_COARSE_LOCATION",com.braedin.butler.vspeed.vario.app.vSpeedVarioInterfaceActivity,false,null,true,<com.braedin.butler.vspeed.vario.app.vSpeedVarioActivity: void onCreate(android.os.Bundle)>,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.app.MainActivity,true,<com.braedin.butler.vspeed.vario.app.MainActivity: void u()>,true,<com.braedin.butler.vspeed.vario.app.MainActivity$10: void onDismiss(android.content.DialogInterface)>,false,null,true
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.ui.utils.ExpandableHeightExpandableListView,false,null,true,<com.braedin.butler.vspeed.vario.app.MainActivity$10: void onDismiss(android.content.DialogInterface)>,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_COARSE_LOCATION",com.braedin.butler.vspeed.vario.app.vSpeedVarioActivity,false,null,true,<com.braedin.butler.vspeed.vario.app.vSpeedVarioActivity: void onCreate(android.os.Bundle)>,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.app.vSpeedVarioActivity,false,null,true,<com.braedin.butler.vspeed.vario.app.vSpeedVarioActivity: void onCreate(android.os.Bundle)>,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.a.c,true,<com.braedin.butler.vspeed.vario.app.MainActivity: void u()>,false,null,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.app.update.c,true,<com.braedin.butler.vspeed.vario.app.MainActivity: void u()>,false,null,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.a.d,true,<com.braedin.butler.vspeed.vario.app.MainActivity: void u()>,false,null,false,null,false
vSpeed-Vario.apk,"android.permission.ACCESS_FINE_LOCATION",com.braedin.butler.vspeed.vario.app.vSpeedVarioInterfaceActivity,false,null,true,<com.braedin.butler.vspeed.vario.app.vSpeedVarioActivity: void onCreate(android.os.Bundle)>,false,null,falseWalrus.apk,"android.permission.ACCESS_FINE_LOCATION",com.bugfuzz.android.projectwalrus.card.OrmLiteBaseAppCompatActivity,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,false
Walrus.apk,"android.permission.ACCESS_FINE_LOCATION",com.bugfuzz.android.projectwalrus.card.ui.WalletActivity,true,<pub.devrel.easypermissions.EasyPermissions: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.bugfuzz.android.projectwalrus.card.ui.WalletActivity: void onCreate(android.os.Bundle)>,false,null,trueweather-lite.apk,"android.permission.ACCESS_FINE_LOCATION",com.aarole.weather_lite.HomeActivity,true,<com.aarole.weather_lite.HomeActivity: void onCreate(android.os.Bundle)>,true,<com.aarole.weather_lite.HomeActivity: void onCreate(android.os.Bundle)>,false,null,true
weather-lite.apk,"android.permission.ACCESS_COARSE_LOCATION",com.aarole.weather_lite.HomeActivity,true,<com.aarole.weather_lite.HomeActivity: void onCreate(android.os.Bundle)>,true,<com.aarole.weather_lite.HomeActivity: void onCreate(android.os.Bundle)>,false,null,trueWeatherForecast.apk,"android.permission.ACCESS_FINE_LOCATION",com.neeraja.weatherforecasting.utils.Utils,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_COARSE_LOCATION",com.neeraja.weatherforecasting.utils.Utils,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_FINE_LOCATION",com.neeraja.weatherforecasting.view.activities.WeatherActivity,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_FINE_LOCATION",com.neeraja.weatherforecasting.presenter.WeatherPresenter,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_FINE_LOCATION",com.neeraja.weatherforecasting.utils.GatherLocation,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_COARSE_LOCATION",com.neeraja.weatherforecasting.utils.GatherLocation,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_COARSE_LOCATION",com.neeraja.weatherforecasting.presenter.WeatherPresenter,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,false
WeatherForecast.apk,"android.permission.ACCESS_COARSE_LOCATION",com.neeraja.weatherforecasting.view.activities.WeatherActivity,true,<com.neeraja.weatherforecasting.utils.GatherLocation: android.location.Location getLocation(android.content.Context)>,false,null,false,null,falseWeathery.apk,"android.permission.ACCESS_COARSE_LOCATION",com.kmsoftapp.weathery.ui.MainActivity,true,<com.kmsoftapp.weathery.ui.MainActivity: boolean hasLocationPermission()>,true,<com.kmsoftapp.weathery.ui.MainActivity: void requestLocationPermission()>,false,null,trueWerden-Recargate-Mobile.apk,"android.permission.CAMERA",com.mirecargas.Inicio,true,<com.mirecargas.Inicio: void onRequestPermissionsResult(int,java.lang.String[],int[])>,true,<com.mirecargas.Inicio: void validatePermissions()>,true,<com.mirecargas.Inicio: void validatePermissions()>,true
Werden-Recargate-Mobile.apk,"android.permission.CAMERA",com.mirecargas.Models.Customer,true,<com.mirecargas.Inicio: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,false
Werden-Recargate-Mobile.apk,"android.permission.CAMERA",com.mirecargas.Inicio$dialogAddCustomer,true,<com.mirecargas.Inicio: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,false
Werden-Recargate-Mobile.apk,"android.permission.CAMERA",com.mirecargas.Inicio$onCreate,true,<com.mirecargas.Inicio: void onRequestPermissionsResult(int,java.lang.String[],int[])>,true,<com.mirecargas.Inicio: void validatePermissions()>,true,<com.mirecargas.Inicio: void validatePermissions()>,true
Werden-Recargate-Mobile.apk,"android.permission.CAMERA",com.mirecargas.Inicio$onCreateOptionsMenu,true,<com.mirecargas.Inicio: void onRequestPermissionsResult(int,java.lang.String[],int[])>,false,null,false,null,falseWhatsAppStatusSaver-Kotlin.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.farsheel.statussaver.home.HomeActivity,false,null,true,<com.farsheel.statussaver.home.HomeActivity: void l()>,false,null,false
WhatsAppStatusSaver-Kotlin.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.farsheel.statussaver.a.a,false,null,true,<com.farsheel.statussaver.home.HomeActivity: void l()>,false,null,false
WhatsAppStatusSaver-Kotlin.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.farsheel.statussaver.a.b,false,null,true,<com.farsheel.statussaver.home.HomeActivity: void l()>,false,null,false
WhatsAppStatusSaver-Kotlin.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.farsheel.statussaver.home.b,false,null,true,<com.farsheel.statussaver.home.HomeActivity: void l()>,false,null,false
WhatsAppStatusSaver-Kotlin.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.farsheel.statussaver.home.HomeActivity$a,false,null,true,<com.farsheel.statussaver.home.HomeActivity: void l()>,false,null,falseWhatsCrap.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.whatscrap.MainActivity$2,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WhatsCrap.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.whatscrap.MainActivity$3,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WhatsCrap.apk,"android.permission.READ_EXTERNAL_STORAGE",com.whatscrap.MainActivity,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WhatsCrap.apk,"android.permission.READ_EXTERNAL_STORAGE",com.whatscrap.MainActivity$3,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WhatsCrap.apk,"android.permission.READ_EXTERNAL_STORAGE",com.whatscrap.MainActivity$2,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WhatsCrap.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.whatscrap.MainActivity,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,true,<com.whatscrap.MainActivity: void onCreate(android.os.Bundle)>,false,null,trueWhatTheCodec.apk,"android.permission.READ_EXTERNAL_STORAGE",com.javernaut.whatthecodec.c.c,false,null,true,<com.javernaut.whatthecodec.c.c: void b(android.app.Activity,int)>,false,null,false
WhatTheCodec.apk,"android.permission.READ_EXTERNAL_STORAGE",com.javernaut.whatthecodec.presentation.root.ui.RootActivity,false,null,true,<com.javernaut.whatthecodec.c.c: void b(android.app.Activity,int)>,false,null,falseWhereAreTheEyes.apk,"android.permission.ACCESS_FINE_LOCATION",org.daylightingsociety.wherearetheeyes.MainActivity,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,false,null,true
WhereAreTheEyes.apk,"android.permission.ACCESS_FINE_LOCATION",org.daylightingsociety.wherearetheeyes.Images,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,false,null,true
WhereAreTheEyes.apk,"android.permission.ACCESS_FINE_LOCATION",org.daylightingsociety.wherearetheeyes.GPS,true,<org.daylightingsociety.wherearetheeyes.MainActivity$11: void onClick(android.content.DialogInterface,int)>,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,false,null,true
WhereAreTheEyes.apk,"android.permission.ACCESS_FINE_LOCATION",org.daylightingsociety.wherearetheeyes.Score,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,true,<org.daylightingsociety.wherearetheeyes.MainActivity: void acquireLocationPerms()>,false,null,trueWhereYouGo.apk,"android.permission.ACCESS_FINE_LOCATION",menion.android.whereyougo.gui.activity.MainActivity,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.ACCESS_COARSE_LOCATION",menion.android.whereyougo.gui.activity.MainActivity,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.WRITE_EXTERNAL_STORAGE",menion.android.whereyougo.gui.activity.MainActivity,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.ACCESS_COARSE_LOCATION",menion.android.whereyougo.permission.PermissionHandler,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.READ_EXTERNAL_STORAGE",menion.android.whereyougo.gui.activity.MainActivity,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.READ_EXTERNAL_STORAGE",menion.android.whereyougo.permission.PermissionHandler,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.WRITE_EXTERNAL_STORAGE",menion.android.whereyougo.permission.PermissionHandler,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,false
WhereYouGo.apk,"android.permission.ACCESS_FINE_LOCATION",menion.android.whereyougo.permission.PermissionHandler,true,<menion.android.whereyougo.permission.PermissionHandler: java.lang.String[] checkKoPermissions(android.app.Activity,java.lang.String[])>,false,null,false,null,falsewhiteboard.apk,"android.permission.RECORD_AUDIO",com.vinnyoodles.vincent.whiteboardclient.MainActivity,true,<com.vinnyoodles.vincent.whiteboardclient.MainActivity: void onCreate(android.os.Bundle)>,true,<com.vinnyoodles.vincent.whiteboardclient.MainActivity: void onCreate(android.os.Bundle)>,false,null,truewifiauto.apk,"android.permission.ACCESS_FINE_LOCATION",fr.alexandreroman.wifiauto.GeofenceWorker,true,<fr.alexandreroman.wifiauto.GeofenceWorker$Companion: void reset(android.content.Context)>,false,null,false,null,falseWingsApp.apk,"android.permission.WRITE_CONTACTS",com.saurabh.wings2017.MainActivity,true,<com.saurabh.wings2017.MainActivity: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.saurabh.wings2017.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WingsApp.apk,"android.permission.READ_CONTACTS",com.saurabh.wings2017.SaveSharedPreferences,true,<com.saurabh.wings2017.MainActivity: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,false
WingsApp.apk,"android.permission.WRITE_CONTACTS",com.saurabh.wings2017.SaveSharedPreferences,true,<com.saurabh.wings2017.MainActivity: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,false
WingsApp.apk,"android.permission.READ_CONTACTS",com.saurabh.wings2017.MainActivity,true,<com.saurabh.wings2017.MainActivity: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.saurabh.wings2017.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WingsApp.apk,"android.permission.CALL_PHONE",com.saurabh.wings2017.MainActivity,true,<com.saurabh.wings2017.MainActivity: boolean hasPermissions(android.content.Context,java.lang.String[])>,true,<com.saurabh.wings2017.MainActivity: void onCreate(android.os.Bundle)>,false,null,true
WingsApp.apk,"android.permission.CALL_PHONE",com.saurabh.wings2017.SaveSharedPreferences,true,<com.saurabh.wings2017.MainActivity: boolean hasPermissions(android.content.Context,java.lang.String[])>,false,null,false,null,falseWitcher.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.anioncode.witcher.MainActivity,false,null,true,<com.anioncode.witcher.MainActivity: void onCreate(android.os.Bundle)>,false,null,falsewonderdroid-x.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.atelieryl.wonderdroid.Select,true,<com.atelieryl.wonderdroid.Select: void onStart()>,true,<com.atelieryl.wonderdroid.Select: void onStart()>,true,<com.atelieryl.wonderdroid.Select: void onStart()>,truewX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.util.UtilityImageMap,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.objects.PolygonType,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.WRITE_EXTERNAL_STORAGE",joshuatee.wx.settings.SettingsNotificationsActivity,true,<joshuatee.wx.settings.SettingsNotificationsActivity: void showFileWritePermsDialogue()>,true,<joshuatee.wx.settings.SettingsNotificationsActivity: void showFileWritePermsDialogue()>,false,null,true
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.util.UtilityFileManagement,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLTextObject,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLRadarActivityMultiPane,true,<joshuatee.wx.radar.WXGLRadarActivityMultiPane: void onStop()>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.WRITE_EXTERNAL_STORAGE",joshuatee.wx.MyApplication,true,<joshuatee.wx.settings.SettingsNotificationsActivity: void showFileWritePermsDialogue()>,true,<joshuatee.wx.settings.SettingsNotificationsActivity: void showFileWritePermsDialogue()>,false,null,true
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLSurfaceView,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.UIPreferences,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.util.Utility,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.settings.UtilityLocation,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLRadarActivityMultiPane$onCreate,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLRadarActivityMultiPane$onCreate,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.ui.UtilityUI,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.ui.UtilityUI,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.UIPreferences,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.ui.UtilityToolbar,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLSurfaceView,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.settings.UtilityLocation,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLRadarActivity$onCreate,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLTextObject,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.util.UtilityImageMap,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLRadarActivity,true,<joshuatee.wx.radar.WXGLRadarActivity: void onStop()>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.ui.UtilityToolbar,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.objects.PolygonType,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.MyApplication,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLRadarActivity$onCreate,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.settings.Location,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.util.UtilityLog,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLRadarActivityMultiPane,true,<joshuatee.wx.radar.WXGLRadarActivityMultiPane: void onStop()>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.util.UtilityImg,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.ui.ObjectImageMap,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.UtilityRadarUI,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.settings.Location,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.VideoRecordActivity,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.ui.ObjectImageMap,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLRender,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.WXGLRender,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.util.UtilityImg,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.WRITE_EXTERNAL_STORAGE",joshuatee.wx.util.Utility,true,<joshuatee.wx.settings.SettingsNotificationsActivity: void showFileWritePermsDialogue()>,true,<joshuatee.wx.settings.SettingsNotificationsActivity: void showFileWritePermsDialogue()>,false,null,true
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.MyApplication,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.util.UtilityLog,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.util.Utility,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.util.UtilityFileManagement,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.WXGLRadarActivity,true,<joshuatee.wx.radar.WXGLRadarActivity: void onStop()>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_FINE_LOCATION",joshuatee.wx.radar.UtilityRadarUI,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,false
wX---modded-by-ELY-M.apk,"android.permission.ACCESS_COARSE_LOCATION",joshuatee.wx.radar.VideoRecordActivity,true,<joshuatee.wx.settings.UtilityLocation: double[] getGps(android.content.Context)>,false,null,false,null,falsexiaExpressAndroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",fr.ac_versailles.dane.xiaexpress.MainActivity$6,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true
xiaExpressAndroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",fr.ac_versailles.dane.xiaexpress.MainActivity$3,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true
xiaExpressAndroid.apk,"android.permission.WRITE_EXTERNAL_STORAGE",fr.ac_versailles.dane.xiaexpress.MainActivity,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,true,<fr.ac_versailles.dane.xiaexpress.MainActivity: void onCreate(android.os.Bundle)>,trueyaxim.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.yaxim.androidclient.chat.MUCChatWindow,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true
yaxim.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.yaxim.androidclient.chat.ChatWindow,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true
yaxim.apk,"android.permission.WRITE_EXTERNAL_STORAGE",org.yaxim.androidclient.data.ChatHelper,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,true,<org.yaxim.androidclient.chat.ChatWindow: void requestStoragePermissionAndRun(int)>,trueYoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.event_add.AddEventActivity$onSetupSubButton,true,<com.suda.yzune.youngcommemoration.event_add.AddEventActivity: void pickImage()>,true,<com.suda.yzune.youngcommemoration.event_add.AddEventActivity: void pickImage()>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.base_view.BaseActivity,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.share.ShareEventActivity,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity,true,<com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity: void onCreate(android.os.Bundle)>,true,<com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity: void onCreate(android.os.Bundle)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity$initEvent,true,<com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity: void onCreate(android.os.Bundle)>,true,<com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity: void onCreate(android.os.Bundle)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.base_view.BaseTitleActivity$createView$$inlined$UI$lambda,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.event_add.AddEventActivity$initEvent,true,<com.suda.yzune.youngcommemoration.event_add.AddEventActivity: void pickImage()>,true,<com.suda.yzune.youngcommemoration.event_add.AddEventActivity: void pickImage()>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity$onSetupSubButton,true,<com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity: void onCreate(android.os.Bundle)>,true,<com.suda.yzune.youngcommemoration.event_appwidget.EventAppWidgetConfigureActivity: void onCreate(android.os.Bundle)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.share.ShareEventActivity$initEvent,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,true,<com.suda.yzune.youngcommemoration.share.ShareEventActivity$onSetupSubButton$1: void onClick(android.view.View)>,false,null,true
YoungCommemoration.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.suda.yzune.youngcommemoration.event_add.AddEventActivity,true,<com.suda.yzune.youngcommemoration.event_add.AddEventActivity: void pickImage()>,true,<com.suda.yzune.youngcommemoration.event_add.AddEventActivity: void pickImage()>,false,null,trueyour-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.utils.AppPreference,true,<org.thosp.yourlocalweather.service.LocationUpdateService: void detectLocation()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.service.LocationUpdateService,true,<org.thosp.yourlocalweather.service.LocationUpdateService: boolean updateNetworkLocation(boolean,android.content.Intent,java.lang.Integer,boolean)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.utils.PermissionUtil,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.service.UpdateWeatherService,true,<org.thosp.yourlocalweather.service.LocationUpdateService$6: void run()>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.utils.LogToFile,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.service.LocationUpdateService,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.model.LocationsDbHelper,true,<org.thosp.yourlocalweather.service.LocationUpdateService: void detectLocation()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.widget.AbstractWidgetProvider,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.ConnectionDetector,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.service.MozillaLocationService,true,<org.thosp.yourlocalweather.service.LocationNetworkSourcesService: java.util.List getCells(android.content.Context,android.telephony.TelephonyManager)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.ConnectionDetector,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.service.LocationNetworkSourcesService,true,<org.thosp.yourlocalweather.service.LocationNetworkSourcesService: java.util.List getCells(android.content.Context,android.telephony.TelephonyManager)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.service.NominatimLocationService,true,<org.thosp.yourlocalweather.service.LocationUpdateService: boolean gpsRequestLocation()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.model.Location,true,<org.thosp.yourlocalweather.service.LocationUpdateService: boolean updateNetworkLocation(boolean,android.content.Intent,java.lang.Integer,boolean)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.VoiceSettingsActivity,true,<org.thosp.yourlocalweather.service.LocationUpdateService$6: void run()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.ConnectionDetector,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.utils.AppPreference,true,<org.thosp.yourlocalweather.service.LocationUpdateService: boolean updateNetworkLocation(boolean,android.content.Intent,java.lang.Integer,boolean)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.service.LocationUpdateService,true,<org.thosp.yourlocalweather.service.LocationUpdateService: void detectLocation()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.widget.AbstractWidgetProvider,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.MainActivity,true,<org.thosp.yourlocalweather.MainActivity: boolean checkPermissionsSettingsAndShowAlert()>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.model.LocationsDbHelper,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.widget.AbstractWidgetProvider,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.model.Location,true,<org.thosp.yourlocalweather.service.LocationUpdateService: void detectLocation()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.MainActivity,true,<org.thosp.yourlocalweather.MainActivity: boolean checkPermissionsSettingsAndShowAlert()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.VoiceLanguageOptionsActivity,true,<org.thosp.yourlocalweather.service.LocationUpdateService$6: void run()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.service.WeatherByVoiceService,true,<org.thosp.yourlocalweather.service.LocationUpdateService$6: void run()>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.utils.PermissionUtil,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.utils.LogToFile,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.utils.AppPreference,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.MainActivity,true,<org.thosp.yourlocalweather.MainActivity: boolean checkPermissionsSettingsAndShowAlert()>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.service.NetworkLocationProvider,true,<org.thosp.yourlocalweather.service.LocationNetworkSourcesService: java.util.List getCells(android.content.Context,android.telephony.TelephonyManager)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.service.AbstractCommonService,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.service.AbstractCommonService,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.service.BluetoothEventsReceiver,true,<org.thosp.yourlocalweather.service.LocationUpdateService$6: void run()>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.utils.PermissionUtil,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_FINE_LOCATION",org.thosp.yourlocalweather.model.LocationsDbHelper,true,<org.thosp.yourlocalweather.service.LocationUpdateService: boolean updateNetworkLocation(boolean,android.content.Intent,java.lang.Integer,boolean)>,false,null,false,null,false
your-local-weather.apk,"android.permission.ACCESS_COARSE_LOCATION",org.thosp.yourlocalweather.utils.LogToFile,true,<org.thosp.yourlocalweather.utils.PermissionUtil: java.util.List getAllPermissions(android.content.Context)>,false,null,false,null,false
your-local-weather.apk,"android.permission.READ_PHONE_STATE",org.thosp.yourlocalweather.service.AbstractCommonService,true,<org.thosp.yourlocalweather.utils.PermissionUtil: boolean checkPermissionsAndSettings(android.content.Context)>,false,null,false,null,falseZazolc.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.map.MainFragment,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,false,null,false,null,false
Zazolc.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.location.LocationRequestFragment,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,true,<de.westnordost.streetcomplete.location.LocationRequestFragment: void requestLocationPermissions()>,false,null,true
Zazolc.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.location.LocationUtil,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,false,null,false,null,false
Zazolc.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.MainActivity,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,true,<de.westnordost.streetcomplete.location.LocationRequestFragment: void requestLocationPermissions()>,false,null,true
Zazolc.apk,"android.permission.ACCESS_FINE_LOCATION",de.westnordost.streetcomplete.location.LocationState,true,<de.westnordost.streetcomplete.location.LocationUtil: boolean hasLocationPermission(android.content.Context)>,true,<de.westnordost.streetcomplete.location.LocationRequestFragment: void requestLocationPermissions()>,false,null,trueZeroKnowledgeProofClient.apk,"android.permission.CAMERA",org.seniorsigan.zkpauthenticatorclient.QRCodeScannerActivity,true,<org.seniorsigan.zkpauthenticatorclient.QRCodeScannerActivity: void onCreate(android.os.Bundle)>,true,<org.seniorsigan.zkpauthenticatorclient.QRCodeScannerActivity: void onCreate(android.os.Bundle)>,false,null,true
ZeroKnowledgeProofClient.apk,"android.permission.INTERNET",org.seniorsigan.zkpauthenticatorclient.SignupActivity,true,<org.seniorsigan.zkpauthenticatorclient.SignupActivity: void withPermission(kotlin.jvm.functions.Function0)>,false,null,false,null,false
ZeroKnowledgeProofClient.apk,"android.permission.INTERNET",org.seniorsigan.zkpauthenticatorclient.App,true,<org.seniorsigan.zkpauthenticatorclient.SignupActivity: void withPermission(kotlin.jvm.functions.Function0)>,false,null,false,null,false
ZeroKnowledgeProofClient.apk,"android.permission.INTERNET",org.seniorsigan.zkpauthenticatorclient.SignupActivity$onCreate,true,<org.seniorsigan.zkpauthenticatorclient.SignupActivity: void withPermission(kotlin.jvm.functions.Function0)>,false,null,false,null,false
ZeroKnowledgeProofClient.apk,"android.permission.INTERNET",org.seniorsigan.zkpauthenticatorclient.SignupActivity$signUp,true,<org.seniorsigan.zkpauthenticatorclient.SignupActivity: void withPermission(kotlin.jvm.functions.Function0)>,false,null,false,null,falseZRM-wallet.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.m2049r.xmrwallet.util.Helper,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,false,null,true
ZRM-wallet.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.m2049r.xmrwallet.LoginActivity,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,false,null,true
ZRM-wallet.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.m2049r.xmrwallet.BaseActivity,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,false,null,true
ZRM-wallet.apk,"android.permission.WRITE_EXTERNAL_STORAGE",com.m2049r.xmrwallet.-$$Lambda$LoginActivity,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,true,<com.m2049r.xmrwallet.util.Helper: boolean getWritePermission(android.app.Activity)>,false,null,true